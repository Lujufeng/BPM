-- ----------------------------
-- 这里包含流程引擎自带的数据表和自增序列，以及橙单工作流模块内置的og_flow开头的数据表。
-- ----------------------------

SET SERVEROUTPUT ON
WHENEVER SQLERROR CONTINUE NONE

DROP SEQUENCE ACT_EVT_LOG_SEQ;
CREATE SEQUENCE ACT_EVT_LOG_SEQ MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

DROP SEQUENCE ACT_HI_TASK_EVT_LOG_SEQ;
CREATE SEQUENCE ACT_HI_TASK_EVT_LOG_SEQ MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;

-- ----------------------------
-- Table structure for ACT_EVT_LOG
-- ----------------------------
DROP TABLE ACT_EVT_LOG;
CREATE TABLE ACT_EVT_LOG (
  LOG_NR_ NUMBER(19) NOT NULL ,
  TYPE_ NVARCHAR2(64) ,
  PROC_DEF_ID_ NVARCHAR2(64) ,
  PROC_INST_ID_ NVARCHAR2(64) ,
  EXECUTION_ID_ NVARCHAR2(64) ,
  TASK_ID_ NVARCHAR2(64) ,
  TIME_STAMP_ TIMESTAMP(6) NOT NULL ,
  USER_ID_ NVARCHAR2(255) ,
  DATA_ BLOB ,
  LOCK_OWNER_ NVARCHAR2(255) ,
  LOCK_TIME_ TIMESTAMP(6) ,
  IS_PROCESSED_ NUMBER(3) DEFAULT 0
);

-- ----------------------------
-- Table structure for ACT_GE_BYTEARRAY
-- ----------------------------
DROP TABLE ACT_GE_BYTEARRAY;
CREATE TABLE ACT_GE_BYTEARRAY (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  NAME_ NVARCHAR2(255) ,
  DEPLOYMENT_ID_ NVARCHAR2(64) ,
  BYTES_ BLOB ,
  GENERATED_ NUMBER(1)
);

-- ----------------------------
-- Table structure for ACT_GE_PROPERTY
-- ----------------------------
DROP TABLE ACT_GE_PROPERTY;
CREATE TABLE ACT_GE_PROPERTY (
  NAME_ NVARCHAR2(64) NOT NULL ,
  VALUE_ NVARCHAR2(300) ,
  REV_ NUMBER
);

-- ----------------------------
-- Records of ACT_GE_PROPERTY
-- ----------------------------
INSERT INTO ACT_GE_PROPERTY VALUES ('common.schema.version', '6.6.0.0', '1');
INSERT INTO ACT_GE_PROPERTY VALUES ('next.dbid', '1', '1');
INSERT INTO ACT_GE_PROPERTY VALUES ('identitylink.schema.version', '6.6.0.0', '1');
INSERT INTO ACT_GE_PROPERTY VALUES ('entitylink.schema.version', '6.6.0.0', '1');
INSERT INTO ACT_GE_PROPERTY VALUES ('eventsubscription.schema.version', '6.6.0.0', '1');
INSERT INTO ACT_GE_PROPERTY VALUES ('task.schema.version', '6.6.0.0', '1');
INSERT INTO ACT_GE_PROPERTY VALUES ('variable.schema.version', '6.6.0.0', '1');
INSERT INTO ACT_GE_PROPERTY VALUES ('job.schema.version', '6.6.0.0', '1');
INSERT INTO ACT_GE_PROPERTY VALUES ('batch.schema.version', '6.6.0.0', '1');
INSERT INTO ACT_GE_PROPERTY VALUES ('schema.version', '6.6.0.0', '1');
INSERT INTO ACT_GE_PROPERTY VALUES ('schema.history', 'create(6.6.0.0)', '1');
INSERT INTO ACT_GE_PROPERTY VALUES ('cfg.execution-related-entities-count', 'true', '1');
INSERT INTO ACT_GE_PROPERTY VALUES ('cfg.task-related-entities-count', 'true', '1');
COMMIT;

-- ----------------------------
-- Table structure for ACT_HI_ACTINST
-- ----------------------------
DROP TABLE ACT_HI_ACTINST;
CREATE TABLE ACT_HI_ACTINST (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER DEFAULT 1 ,
  PROC_DEF_ID_ NVARCHAR2(64) NOT NULL ,
  PROC_INST_ID_ NVARCHAR2(64) NOT NULL ,
  EXECUTION_ID_ NVARCHAR2(64) NOT NULL ,
  ACT_ID_ NVARCHAR2(255) NOT NULL ,
  TASK_ID_ NVARCHAR2(64) ,
  CALL_PROC_INST_ID_ NVARCHAR2(64) ,
  ACT_NAME_ NVARCHAR2(255) ,
  ACT_TYPE_ NVARCHAR2(255) NOT NULL ,
  ASSIGNEE_ NVARCHAR2(255) ,
  START_TIME_ TIMESTAMP(6) NOT NULL ,
  END_TIME_ TIMESTAMP(6) ,
  TRANSACTION_ORDER_ NUMBER ,
  DURATION_ NUMBER(19) ,
  DELETE_REASON_ NVARCHAR2(2000) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Table structure for ACT_HI_ATTACHMENT
-- ----------------------------
DROP TABLE ACT_HI_ATTACHMENT;
CREATE TABLE ACT_HI_ATTACHMENT (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  USER_ID_ NVARCHAR2(255) ,
  NAME_ NVARCHAR2(255) ,
  DESCRIPTION_ NVARCHAR2(2000) ,
  TYPE_ NVARCHAR2(255) ,
  TASK_ID_ NVARCHAR2(64) ,
  PROC_INST_ID_ NVARCHAR2(64) ,
  URL_ NVARCHAR2(2000) ,
  CONTENT_ID_ NVARCHAR2(64) ,
  TIME_ TIMESTAMP(6)
);

-- ----------------------------
-- Table structure for ACT_HI_COMMENT
-- ----------------------------
DROP TABLE ACT_HI_COMMENT;
CREATE TABLE ACT_HI_COMMENT (
  ID_ NVARCHAR2(64) NOT NULL ,
  TYPE_ NVARCHAR2(255) ,
  TIME_ TIMESTAMP(6) NOT NULL ,
  USER_ID_ NVARCHAR2(255) ,
  TASK_ID_ NVARCHAR2(64) ,
  PROC_INST_ID_ NVARCHAR2(64) ,
  ACTION_ NVARCHAR2(255) ,
  MESSAGE_ NVARCHAR2(2000) ,
  FULL_MSG_ BLOB
);

-- ----------------------------
-- Table structure for ACT_HI_DETAIL
-- ----------------------------
DROP TABLE ACT_HI_DETAIL;
CREATE TABLE ACT_HI_DETAIL (
  ID_ NVARCHAR2(64) NOT NULL ,
  TYPE_ NVARCHAR2(255) NOT NULL ,
  PROC_INST_ID_ NVARCHAR2(64) ,
  EXECUTION_ID_ NVARCHAR2(64) ,
  TASK_ID_ NVARCHAR2(64) ,
  ACT_INST_ID_ NVARCHAR2(64) ,
  NAME_ NVARCHAR2(255) NOT NULL ,
  VAR_TYPE_ NVARCHAR2(64) ,
  REV_ NUMBER ,
  TIME_ TIMESTAMP(6) NOT NULL ,
  BYTEARRAY_ID_ NVARCHAR2(64) ,
  DOUBLE_ NUMBER ,
  LONG_ NUMBER(19) ,
  TEXT_ NVARCHAR2(2000) ,
  TEXT2_ NVARCHAR2(2000)
);

-- ----------------------------
-- Table structure for ACT_HI_ENTITYLINK
-- ----------------------------
DROP TABLE ACT_HI_ENTITYLINK;
CREATE TABLE ACT_HI_ENTITYLINK (
  ID_ NVARCHAR2(64) NOT NULL ,
  LINK_TYPE_ NVARCHAR2(255) ,
  CREATE_TIME_ TIMESTAMP(6) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  SCOPE_DEFINITION_ID_ NVARCHAR2(255) ,
  PARENT_ELEMENT_ID_ NVARCHAR2(255) ,
  REF_SCOPE_ID_ NVARCHAR2(255) ,
  REF_SCOPE_TYPE_ NVARCHAR2(255) ,
  REF_SCOPE_DEFINITION_ID_ NVARCHAR2(255) ,
  ROOT_SCOPE_ID_ NVARCHAR2(255) ,
  ROOT_SCOPE_TYPE_ NVARCHAR2(255) ,
  HIERARCHY_TYPE_ NVARCHAR2(255)
);

-- ----------------------------
-- Table structure for ACT_HI_IDENTITYLINK
-- ----------------------------
DROP TABLE ACT_HI_IDENTITYLINK;
CREATE TABLE ACT_HI_IDENTITYLINK (
  ID_ NVARCHAR2(64) NOT NULL ,
  GROUP_ID_ NVARCHAR2(255) ,
  TYPE_ NVARCHAR2(255) ,
  USER_ID_ NVARCHAR2(255) ,
  TASK_ID_ NVARCHAR2(64) ,
  CREATE_TIME_ TIMESTAMP(6) ,
  PROC_INST_ID_ NVARCHAR2(64) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  SCOPE_DEFINITION_ID_ NVARCHAR2(255)
);

-- ----------------------------
-- Table structure for ACT_HI_PROCINST
-- ----------------------------
DROP TABLE ACT_HI_PROCINST;
CREATE TABLE ACT_HI_PROCINST (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER DEFAULT 1 ,
  PROC_INST_ID_ NVARCHAR2(64) NOT NULL ,
  BUSINESS_KEY_ NVARCHAR2(255) ,
  PROC_DEF_ID_ NVARCHAR2(64) NOT NULL ,
  START_TIME_ TIMESTAMP(6) NOT NULL ,
  END_TIME_ TIMESTAMP(6) ,
  DURATION_ NUMBER(19) ,
  START_USER_ID_ NVARCHAR2(255) ,
  START_ACT_ID_ NVARCHAR2(255) ,
  END_ACT_ID_ NVARCHAR2(255) ,
  SUPER_PROCESS_INSTANCE_ID_ NVARCHAR2(64) ,
  DELETE_REASON_ NVARCHAR2(2000) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT '' ,
  NAME_ NVARCHAR2(255) ,
  CALLBACK_ID_ NVARCHAR2(255) ,
  CALLBACK_TYPE_ NVARCHAR2(255) ,
  REFERENCE_ID_ NVARCHAR2(255) ,
  REFERENCE_TYPE_ NVARCHAR2(255)
);

-- ----------------------------
-- Table structure for ACT_HI_TASKINST
-- ----------------------------
DROP TABLE ACT_HI_TASKINST;
CREATE TABLE ACT_HI_TASKINST (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER DEFAULT 1 ,
  PROC_DEF_ID_ NVARCHAR2(64) ,
  TASK_DEF_ID_ NVARCHAR2(64) ,
  TASK_DEF_KEY_ NVARCHAR2(255) ,
  PROC_INST_ID_ NVARCHAR2(64) ,
  EXECUTION_ID_ NVARCHAR2(64) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  SCOPE_DEFINITION_ID_ NVARCHAR2(255) ,
  PROPAGATED_STAGE_INST_ID_ NVARCHAR2(255) ,
  PARENT_TASK_ID_ NVARCHAR2(64) ,
  NAME_ NVARCHAR2(255) ,
  DESCRIPTION_ NVARCHAR2(2000) ,
  OWNER_ NVARCHAR2(255) ,
  ASSIGNEE_ NVARCHAR2(255) ,
  START_TIME_ TIMESTAMP(6) NOT NULL ,
  CLAIM_TIME_ TIMESTAMP(6) ,
  END_TIME_ TIMESTAMP(6) ,
  DURATION_ NUMBER(19) ,
  DELETE_REASON_ NVARCHAR2(2000) ,
  PRIORITY_ NUMBER ,
  DUE_DATE_ TIMESTAMP(6) ,
  FORM_KEY_ NVARCHAR2(255) ,
  CATEGORY_ NVARCHAR2(255) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT '' ,
  LAST_UPDATED_TIME_ TIMESTAMP(6)
);

-- ----------------------------
-- Table structure for ACT_HI_TSK_LOG
-- ----------------------------
DROP TABLE ACT_HI_TSK_LOG;
CREATE TABLE ACT_HI_TSK_LOG (
  ID_ NUMBER(19) NOT NULL ,
  TYPE_ NVARCHAR2(64) ,
  TASK_ID_ NVARCHAR2(64) NOT NULL ,
  TIME_STAMP_ TIMESTAMP(6) NOT NULL ,
  USER_ID_ NVARCHAR2(255) ,
  DATA_ NVARCHAR2(2000) ,
  EXECUTION_ID_ NVARCHAR2(64) ,
  PROC_INST_ID_ NVARCHAR2(64) ,
  PROC_DEF_ID_ NVARCHAR2(64) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_DEFINITION_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Table structure for ACT_HI_VARINST
-- ----------------------------
DROP TABLE ACT_HI_VARINST;
CREATE TABLE ACT_HI_VARINST (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER DEFAULT 1 ,
  PROC_INST_ID_ NVARCHAR2(64) ,
  EXECUTION_ID_ NVARCHAR2(64) ,
  TASK_ID_ NVARCHAR2(64) ,
  NAME_ NVARCHAR2(255) NOT NULL ,
  VAR_TYPE_ NVARCHAR2(100) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  BYTEARRAY_ID_ NVARCHAR2(64) ,
  DOUBLE_ NUMBER ,
  LONG_ NUMBER(19) ,
  TEXT_ NVARCHAR2(2000) ,
  TEXT2_ NVARCHAR2(2000) ,
  CREATE_TIME_ TIMESTAMP(6) ,
  LAST_UPDATED_TIME_ TIMESTAMP(6)
);

-- ----------------------------
-- Table structure for ACT_ID_BYTEARRAY
-- ----------------------------
DROP TABLE ACT_ID_BYTEARRAY;
CREATE TABLE ACT_ID_BYTEARRAY (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  NAME_ NVARCHAR2(255) ,
  BYTES_ BLOB
);

-- ----------------------------
-- Table structure for ACT_ID_GROUP
-- ----------------------------
DROP TABLE ACT_ID_GROUP;
CREATE TABLE ACT_ID_GROUP (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  NAME_ NVARCHAR2(255) ,
  TYPE_ NVARCHAR2(255)
);

-- ----------------------------
-- Table structure for ACT_ID_INFO
-- ----------------------------
DROP TABLE ACT_ID_INFO;
CREATE TABLE ACT_ID_INFO (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  USER_ID_ NVARCHAR2(64) ,
  TYPE_ NVARCHAR2(64) ,
  KEY_ NVARCHAR2(255) ,
  VALUE_ NVARCHAR2(255) ,
  PASSWORD_ BLOB ,
  PARENT_ID_ NVARCHAR2(255)
);

-- ----------------------------
-- Table structure for ACT_ID_MEMBERSHIP
-- ----------------------------
DROP TABLE ACT_ID_MEMBERSHIP;
CREATE TABLE ACT_ID_MEMBERSHIP (
  USER_ID_ NVARCHAR2(64) NOT NULL ,
  GROUP_ID_ NVARCHAR2(64) NOT NULL
);

-- ----------------------------
-- Table structure for ACT_ID_PRIV
-- ----------------------------
DROP TABLE ACT_ID_PRIV;
CREATE TABLE ACT_ID_PRIV (
  ID_ NVARCHAR2(64) NOT NULL ,
  NAME_ NVARCHAR2(255) NOT NULL
);

-- ----------------------------
-- Table structure for ACT_ID_PRIV_MAPPING
-- ----------------------------
DROP TABLE ACT_ID_PRIV_MAPPING;
CREATE TABLE ACT_ID_PRIV_MAPPING (
  ID_ NVARCHAR2(64) NOT NULL ,
  PRIV_ID_ NVARCHAR2(64) NOT NULL ,
  USER_ID_ NVARCHAR2(255) ,
  GROUP_ID_ NVARCHAR2(255)
);

-- ----------------------------
-- Table structure for ACT_ID_PROPERTY
-- ----------------------------
DROP TABLE ACT_ID_PROPERTY;
CREATE TABLE ACT_ID_PROPERTY (
  NAME_ NVARCHAR2(64) NOT NULL ,
  VALUE_ NVARCHAR2(300) ,
  REV_ NUMBER
);

-- ----------------------------
-- Records of ACT_ID_PROPERTY
-- ----------------------------
INSERT INTO ACT_ID_PROPERTY VALUES ('schema.version', '6.6.0.0', '1');
COMMIT;

-- ----------------------------
-- Table structure for ACT_ID_TOKEN
-- ----------------------------
DROP TABLE ACT_ID_TOKEN;
CREATE TABLE ACT_ID_TOKEN (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  TOKEN_VALUE_ NVARCHAR2(255) ,
  TOKEN_DATE_ TIMESTAMP(6) ,
  IP_ADDRESS_ NVARCHAR2(255) ,
  USER_AGENT_ NVARCHAR2(255) ,
  USER_ID_ NVARCHAR2(255) ,
  TOKEN_DATA_ NVARCHAR2(2000)
);

-- ----------------------------
-- Table structure for ACT_ID_USER
-- ----------------------------
DROP TABLE ACT_ID_USER;
CREATE TABLE ACT_ID_USER (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  FIRST_ NVARCHAR2(255) ,
  LAST_ NVARCHAR2(255) ,
  DISPLAY_NAME_ NVARCHAR2(255) ,
  EMAIL_ NVARCHAR2(255) ,
  PWD_ NVARCHAR2(255) ,
  PICTURE_ID_ NVARCHAR2(64) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Table structure for ACT_PROCDEF_INFO
-- ----------------------------
DROP TABLE ACT_PROCDEF_INFO;
CREATE TABLE ACT_PROCDEF_INFO (
  ID_ NVARCHAR2(64) NOT NULL ,
  PROC_DEF_ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  INFO_JSON_ID_ NVARCHAR2(64)
);

-- ----------------------------
-- Table structure for ACT_RE_DEPLOYMENT
-- ----------------------------
DROP TABLE ACT_RE_DEPLOYMENT;
CREATE TABLE ACT_RE_DEPLOYMENT (
  ID_ NVARCHAR2(64) NOT NULL ,
  NAME_ NVARCHAR2(255) ,
  CATEGORY_ NVARCHAR2(255) ,
  KEY_ NVARCHAR2(255) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT '' ,
  DEPLOY_TIME_ TIMESTAMP(6) ,
  DERIVED_FROM_ NVARCHAR2(64) ,
  DERIVED_FROM_ROOT_ NVARCHAR2(64) ,
  PARENT_DEPLOYMENT_ID_ NVARCHAR2(255) ,
  ENGINE_VERSION_ NVARCHAR2(255)
);

-- ----------------------------
-- Table structure for ACT_RE_MODEL
-- ----------------------------
DROP TABLE ACT_RE_MODEL;
CREATE TABLE ACT_RE_MODEL (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  NAME_ NVARCHAR2(255) ,
  KEY_ NVARCHAR2(255) ,
  CATEGORY_ NVARCHAR2(255) ,
  CREATE_TIME_ TIMESTAMP(6) ,
  LAST_UPDATE_TIME_ TIMESTAMP(6) ,
  VERSION_ NUMBER ,
  META_INFO_ NVARCHAR2(2000) ,
  DEPLOYMENT_ID_ NVARCHAR2(64) ,
  EDITOR_SOURCE_VALUE_ID_ NVARCHAR2(64) ,
  EDITOR_SOURCE_EXTRA_VALUE_ID_ NVARCHAR2(64) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Table structure for ACT_RE_PROCDEF
-- ----------------------------
DROP TABLE ACT_RE_PROCDEF;
CREATE TABLE ACT_RE_PROCDEF (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  CATEGORY_ NVARCHAR2(255) ,
  NAME_ NVARCHAR2(255) ,
  KEY_ NVARCHAR2(255) NOT NULL ,
  VERSION_ NUMBER NOT NULL ,
  DEPLOYMENT_ID_ NVARCHAR2(64) ,
  RESOURCE_NAME_ NVARCHAR2(2000) ,
  DGRM_RESOURCE_NAME_ VARCHAR2(4000 BYTE) ,
  DESCRIPTION_ NVARCHAR2(2000) ,
  HAS_START_FORM_KEY_ NUMBER(1) ,
  HAS_GRAPHICAL_NOTATION_ NUMBER(1) ,
  SUSPENSION_STATE_ NUMBER ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT '' ,
  DERIVED_FROM_ NVARCHAR2(64) ,
  DERIVED_FROM_ROOT_ NVARCHAR2(64) ,
  DERIVED_VERSION_ NUMBER DEFAULT 0  NOT NULL ,
  ENGINE_VERSION_ NVARCHAR2(255)
);

-- ----------------------------
-- Table structure for ACT_RU_ACTINST
-- ----------------------------
DROP TABLE ACT_RU_ACTINST;
CREATE TABLE ACT_RU_ACTINST (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER DEFAULT 1 ,
  PROC_DEF_ID_ NVARCHAR2(64) NOT NULL ,
  PROC_INST_ID_ NVARCHAR2(64) NOT NULL ,
  EXECUTION_ID_ NVARCHAR2(64) NOT NULL ,
  ACT_ID_ NVARCHAR2(255) NOT NULL ,
  TASK_ID_ NVARCHAR2(64) ,
  CALL_PROC_INST_ID_ NVARCHAR2(64) ,
  ACT_NAME_ NVARCHAR2(255) ,
  ACT_TYPE_ NVARCHAR2(255) NOT NULL ,
  ASSIGNEE_ NVARCHAR2(255) ,
  START_TIME_ TIMESTAMP(6) NOT NULL ,
  END_TIME_ TIMESTAMP(6) ,
  DURATION_ NUMBER(19) ,
  TRANSACTION_ORDER_ NUMBER ,
  DELETE_REASON_ NVARCHAR2(2000) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Table structure for ACT_RU_DEADLETTER_JOB
-- ----------------------------
DROP TABLE ACT_RU_DEADLETTER_JOB;
CREATE TABLE ACT_RU_DEADLETTER_JOB (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  CATEGORY_ NVARCHAR2(255) ,
  TYPE_ NVARCHAR2(255) NOT NULL ,
  EXCLUSIVE_ NUMBER(1) ,
  EXECUTION_ID_ NVARCHAR2(64) ,
  PROCESS_INSTANCE_ID_ NVARCHAR2(64) ,
  PROC_DEF_ID_ NVARCHAR2(64) ,
  ELEMENT_ID_ NVARCHAR2(255) ,
  ELEMENT_NAME_ NVARCHAR2(255) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  SCOPE_DEFINITION_ID_ NVARCHAR2(255) ,
  CORRELATION_ID_ NVARCHAR2(255) ,
  EXCEPTION_STACK_ID_ NVARCHAR2(64) ,
  EXCEPTION_MSG_ NVARCHAR2(2000) ,
  DUEDATE_ TIMESTAMP(6) ,
  REPEAT_ NVARCHAR2(255) ,
  HANDLER_TYPE_ NVARCHAR2(255) ,
  HANDLER_CFG_ NVARCHAR2(2000) ,
  CUSTOM_VALUES_ID_ NVARCHAR2(64) ,
  CREATE_TIME_ TIMESTAMP(6) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Table structure for ACT_RU_ENTITYLINK
-- ----------------------------
DROP TABLE ACT_RU_ENTITYLINK;
CREATE TABLE ACT_RU_ENTITYLINK (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  CREATE_TIME_ TIMESTAMP(6) ,
  LINK_TYPE_ NVARCHAR2(255) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  SCOPE_DEFINITION_ID_ NVARCHAR2(255) ,
  PARENT_ELEMENT_ID_ NVARCHAR2(255) ,
  REF_SCOPE_ID_ NVARCHAR2(255) ,
  REF_SCOPE_TYPE_ NVARCHAR2(255) ,
  REF_SCOPE_DEFINITION_ID_ NVARCHAR2(255) ,
  ROOT_SCOPE_ID_ NVARCHAR2(255) ,
  ROOT_SCOPE_TYPE_ NVARCHAR2(255) ,
  HIERARCHY_TYPE_ NVARCHAR2(255)
);

-- ----------------------------
-- Table structure for ACT_RU_EVENT_SUBSCR
-- ----------------------------
DROP TABLE ACT_RU_EVENT_SUBSCR;
CREATE TABLE ACT_RU_EVENT_SUBSCR (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  EVENT_TYPE_ NVARCHAR2(255) NOT NULL ,
  EVENT_NAME_ NVARCHAR2(255) ,
  EXECUTION_ID_ NVARCHAR2(64) ,
  PROC_INST_ID_ NVARCHAR2(64) ,
  ACTIVITY_ID_ NVARCHAR2(64) ,
  CONFIGURATION_ NVARCHAR2(255) ,
  CREATED_ TIMESTAMP(6) NOT NULL ,
  PROC_DEF_ID_ NVARCHAR2(64) ,
  SUB_SCOPE_ID_ NVARCHAR2(64) ,
  SCOPE_ID_ NVARCHAR2(64) ,
  SCOPE_DEFINITION_ID_ NVARCHAR2(64) ,
  SCOPE_TYPE_ NVARCHAR2(64) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Table structure for ACT_RU_EXECUTION
-- ----------------------------
DROP TABLE ACT_RU_EXECUTION;
CREATE TABLE ACT_RU_EXECUTION (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  PROC_INST_ID_ NVARCHAR2(64) ,
  BUSINESS_KEY_ NVARCHAR2(255) ,
  PARENT_ID_ NVARCHAR2(64) ,
  PROC_DEF_ID_ NVARCHAR2(64) ,
  SUPER_EXEC_ NVARCHAR2(64) ,
  ROOT_PROC_INST_ID_ NVARCHAR2(64) ,
  ACT_ID_ NVARCHAR2(255) ,
  IS_ACTIVE_ NUMBER(1) ,
  IS_CONCURRENT_ NUMBER(1) ,
  IS_SCOPE_ NUMBER(1) ,
  IS_EVENT_SCOPE_ NUMBER(1) ,
  IS_MI_ROOT_ NUMBER(1) ,
  SUSPENSION_STATE_ NUMBER ,
  CACHED_ENT_STATE_ NUMBER ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT '' ,
  NAME_ NVARCHAR2(255) ,
  START_ACT_ID_ NVARCHAR2(255) ,
  START_TIME_ TIMESTAMP(6) ,
  START_USER_ID_ NVARCHAR2(255) ,
  LOCK_TIME_ TIMESTAMP(6) ,
  LOCK_OWNER_ NVARCHAR2(255) ,
  IS_COUNT_ENABLED_ NUMBER(1) ,
  EVT_SUBSCR_COUNT_ NUMBER ,
  TASK_COUNT_ NUMBER ,
  JOB_COUNT_ NUMBER ,
  TIMER_JOB_COUNT_ NUMBER ,
  SUSP_JOB_COUNT_ NUMBER ,
  DEADLETTER_JOB_COUNT_ NUMBER ,
  EXTERNAL_WORKER_JOB_COUNT_ NUMBER ,
  VAR_COUNT_ NUMBER ,
  ID_LINK_COUNT_ NUMBER ,
  CALLBACK_ID_ NVARCHAR2(255) ,
  CALLBACK_TYPE_ NVARCHAR2(255) ,
  REFERENCE_ID_ NVARCHAR2(255) ,
  REFERENCE_TYPE_ NVARCHAR2(255) ,
  PROPAGATED_STAGE_INST_ID_ NVARCHAR2(255)
);

-- ----------------------------
-- Table structure for ACT_RU_EXTERNAL_JOB
-- ----------------------------
DROP TABLE ACT_RU_EXTERNAL_JOB;
CREATE TABLE ACT_RU_EXTERNAL_JOB (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  CATEGORY_ NVARCHAR2(255) ,
  TYPE_ NVARCHAR2(255) NOT NULL ,
  LOCK_EXP_TIME_ TIMESTAMP(6) ,
  LOCK_OWNER_ NVARCHAR2(255) ,
  EXCLUSIVE_ NUMBER(1) ,
  EXECUTION_ID_ NVARCHAR2(64) ,
  PROCESS_INSTANCE_ID_ NVARCHAR2(64) ,
  PROC_DEF_ID_ NVARCHAR2(64) ,
  ELEMENT_ID_ NVARCHAR2(255) ,
  ELEMENT_NAME_ NVARCHAR2(255) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  SCOPE_DEFINITION_ID_ NVARCHAR2(255) ,
  CORRELATION_ID_ NVARCHAR2(255) ,
  RETRIES_ NUMBER ,
  EXCEPTION_STACK_ID_ NVARCHAR2(64) ,
  EXCEPTION_MSG_ NVARCHAR2(2000) ,
  DUEDATE_ TIMESTAMP(6) ,
  REPEAT_ NVARCHAR2(255) ,
  HANDLER_TYPE_ NVARCHAR2(255) ,
  HANDLER_CFG_ NVARCHAR2(2000) ,
  CUSTOM_VALUES_ID_ NVARCHAR2(64) ,
  CREATE_TIME_ TIMESTAMP(6) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Table structure for ACT_RU_HISTORY_JOB
-- ----------------------------
DROP TABLE ACT_RU_HISTORY_JOB;
CREATE TABLE ACT_RU_HISTORY_JOB (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  LOCK_EXP_TIME_ TIMESTAMP(6) ,
  LOCK_OWNER_ NVARCHAR2(255) ,
  RETRIES_ NUMBER ,
  EXCEPTION_STACK_ID_ NVARCHAR2(64) ,
  EXCEPTION_MSG_ NVARCHAR2(2000) ,
  HANDLER_TYPE_ NVARCHAR2(255) ,
  HANDLER_CFG_ NVARCHAR2(2000) ,
  CUSTOM_VALUES_ID_ NVARCHAR2(64) ,
  ADV_HANDLER_CFG_ID_ NVARCHAR2(64) ,
  CREATE_TIME_ TIMESTAMP(6) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Table structure for ACT_RU_IDENTITYLINK
-- ----------------------------
DROP TABLE ACT_RU_IDENTITYLINK;
CREATE TABLE ACT_RU_IDENTITYLINK (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  GROUP_ID_ NVARCHAR2(255) ,
  TYPE_ NVARCHAR2(255) ,
  USER_ID_ NVARCHAR2(255) ,
  TASK_ID_ NVARCHAR2(64) ,
  PROC_INST_ID_ NVARCHAR2(64) ,
  PROC_DEF_ID_ NVARCHAR2(64) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  SCOPE_DEFINITION_ID_ NVARCHAR2(255)
);

-- ----------------------------
-- Table structure for ACT_RU_JOB
-- ----------------------------
DROP TABLE ACT_RU_JOB;
CREATE TABLE ACT_RU_JOB (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  CATEGORY_ NVARCHAR2(255) ,
  TYPE_ NVARCHAR2(255) NOT NULL ,
  LOCK_EXP_TIME_ TIMESTAMP(6) ,
  LOCK_OWNER_ NVARCHAR2(255) ,
  EXCLUSIVE_ NUMBER(1) ,
  EXECUTION_ID_ NVARCHAR2(64) ,
  PROCESS_INSTANCE_ID_ NVARCHAR2(64) ,
  PROC_DEF_ID_ NVARCHAR2(64) ,
  ELEMENT_ID_ NVARCHAR2(255) ,
  ELEMENT_NAME_ NVARCHAR2(255) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  SCOPE_DEFINITION_ID_ NVARCHAR2(255) ,
  CORRELATION_ID_ NVARCHAR2(255) ,
  RETRIES_ NUMBER ,
  EXCEPTION_STACK_ID_ NVARCHAR2(64) ,
  EXCEPTION_MSG_ NVARCHAR2(2000) ,
  DUEDATE_ TIMESTAMP(6) ,
  REPEAT_ NVARCHAR2(255) ,
  HANDLER_TYPE_ NVARCHAR2(255) ,
  HANDLER_CFG_ NVARCHAR2(2000) ,
  CUSTOM_VALUES_ID_ NVARCHAR2(64) ,
  CREATE_TIME_ TIMESTAMP(6) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Table structure for ACT_RU_SUSPENDED_JOB
-- ----------------------------
DROP TABLE ACT_RU_SUSPENDED_JOB;
CREATE TABLE ACT_RU_SUSPENDED_JOB (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  CATEGORY_ NVARCHAR2(255) ,
  TYPE_ NVARCHAR2(255) NOT NULL ,
  EXCLUSIVE_ NUMBER(1) ,
  EXECUTION_ID_ NVARCHAR2(64) ,
  PROCESS_INSTANCE_ID_ NVARCHAR2(64) ,
  PROC_DEF_ID_ NVARCHAR2(64) ,
  ELEMENT_ID_ NVARCHAR2(255) ,
  ELEMENT_NAME_ NVARCHAR2(255) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  SCOPE_DEFINITION_ID_ NVARCHAR2(255) ,
  CORRELATION_ID_ NVARCHAR2(255) ,
  RETRIES_ NUMBER ,
  EXCEPTION_STACK_ID_ NVARCHAR2(64) ,
  EXCEPTION_MSG_ NVARCHAR2(2000) ,
  DUEDATE_ TIMESTAMP(6) ,
  REPEAT_ NVARCHAR2(255) ,
  HANDLER_TYPE_ NVARCHAR2(255) ,
  HANDLER_CFG_ NVARCHAR2(2000) ,
  CUSTOM_VALUES_ID_ NVARCHAR2(64) ,
  CREATE_TIME_ TIMESTAMP(6) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Table structure for ACT_RU_TASK
-- ----------------------------
DROP TABLE ACT_RU_TASK;
CREATE TABLE ACT_RU_TASK (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  EXECUTION_ID_ NVARCHAR2(64) ,
  PROC_INST_ID_ NVARCHAR2(64) ,
  PROC_DEF_ID_ NVARCHAR2(64) ,
  TASK_DEF_ID_ NVARCHAR2(64) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  SCOPE_DEFINITION_ID_ NVARCHAR2(255) ,
  PROPAGATED_STAGE_INST_ID_ NVARCHAR2(255) ,
  NAME_ NVARCHAR2(255) ,
  PARENT_TASK_ID_ NVARCHAR2(64) ,
  DESCRIPTION_ NVARCHAR2(2000) ,
  TASK_DEF_KEY_ NVARCHAR2(255) ,
  OWNER_ NVARCHAR2(255) ,
  ASSIGNEE_ NVARCHAR2(255) ,
  DELEGATION_ NVARCHAR2(64) ,
  PRIORITY_ NUMBER ,
  CREATE_TIME_ TIMESTAMP(6) ,
  DUE_DATE_ TIMESTAMP(6) ,
  CATEGORY_ NVARCHAR2(255) ,
  SUSPENSION_STATE_ NUMBER ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT '' ,
  FORM_KEY_ NVARCHAR2(255) ,
  CLAIM_TIME_ TIMESTAMP(6) ,
  IS_COUNT_ENABLED_ NUMBER(1) ,
  VAR_COUNT_ NUMBER ,
  ID_LINK_COUNT_ NUMBER ,
  SUB_TASK_COUNT_ NUMBER
);

-- ----------------------------
-- Table structure for ACT_RU_TIMER_JOB
-- ----------------------------
DROP TABLE ACT_RU_TIMER_JOB;
CREATE TABLE ACT_RU_TIMER_JOB (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  CATEGORY_ NVARCHAR2(255) ,
  TYPE_ NVARCHAR2(255) NOT NULL ,
  LOCK_EXP_TIME_ TIMESTAMP(6) ,
  LOCK_OWNER_ NVARCHAR2(255) ,
  EXCLUSIVE_ NUMBER(1) ,
  EXECUTION_ID_ NVARCHAR2(64) ,
  PROCESS_INSTANCE_ID_ NVARCHAR2(64) ,
  PROC_DEF_ID_ NVARCHAR2(64) ,
  ELEMENT_ID_ NVARCHAR2(255) ,
  ELEMENT_NAME_ NVARCHAR2(255) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  SCOPE_DEFINITION_ID_ NVARCHAR2(255) ,
  CORRELATION_ID_ NVARCHAR2(255) ,
  RETRIES_ NUMBER ,
  EXCEPTION_STACK_ID_ NVARCHAR2(64) ,
  EXCEPTION_MSG_ NVARCHAR2(2000) ,
  DUEDATE_ TIMESTAMP(6) ,
  REPEAT_ NVARCHAR2(255) ,
  HANDLER_TYPE_ NVARCHAR2(255) ,
  HANDLER_CFG_ NVARCHAR2(2000) ,
  CUSTOM_VALUES_ID_ NVARCHAR2(64) ,
  CREATE_TIME_ TIMESTAMP(6) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Table structure for ACT_RU_VARIABLE
-- ----------------------------
DROP TABLE ACT_RU_VARIABLE;
CREATE TABLE ACT_RU_VARIABLE (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  TYPE_ NVARCHAR2(255) NOT NULL ,
  NAME_ NVARCHAR2(255) NOT NULL ,
  EXECUTION_ID_ NVARCHAR2(64) ,
  PROC_INST_ID_ NVARCHAR2(64) ,
  TASK_ID_ NVARCHAR2(64) ,
  SCOPE_ID_ NVARCHAR2(255) ,
  SUB_SCOPE_ID_ NVARCHAR2(255) ,
  SCOPE_TYPE_ NVARCHAR2(255) ,
  BYTEARRAY_ID_ NVARCHAR2(64) ,
  DOUBLE_ NUMBER ,
  LONG_ NUMBER(19) ,
  TEXT_ NVARCHAR2(2000) ,
  TEXT2_ NVARCHAR2(2000)
);

-- ----------------------------
-- Table structure for FLW_CHANNEL_DEFINITION
-- ----------------------------
DROP TABLE FLW_CHANNEL_DEFINITION;
CREATE TABLE FLW_CHANNEL_DEFINITION (
  ID_ VARCHAR2(255 BYTE) NOT NULL ,
  NAME_ VARCHAR2(255 BYTE) ,
  VERSION_ NUMBER ,
  KEY_ VARCHAR2(255 BYTE) ,
  CATEGORY_ VARCHAR2(255 BYTE) ,
  DEPLOYMENT_ID_ VARCHAR2(255 BYTE) ,
  CREATE_TIME_ TIMESTAMP(3) ,
  TENANT_ID_ VARCHAR2(255 BYTE) ,
  RESOURCE_NAME_ VARCHAR2(255 BYTE) ,
  DESCRIPTION_ VARCHAR2(255 BYTE)
);

-- ----------------------------
-- Table structure for FLW_EV_DATABASECHANGELOG
-- ----------------------------
DROP TABLE FLW_EV_DATABASECHANGELOG;
CREATE TABLE FLW_EV_DATABASECHANGELOG (
  ID VARCHAR2(255 BYTE) NOT NULL ,
  AUTHOR VARCHAR2(255 BYTE) NOT NULL ,
  FILENAME VARCHAR2(255 BYTE) NOT NULL ,
  DATEEXECUTED TIMESTAMP(6) NOT NULL ,
  ORDEREXECUTED NUMBER NOT NULL ,
  EXECTYPE VARCHAR2(10 BYTE) NOT NULL ,
  MD5SUM VARCHAR2(35 BYTE) ,
  DESCRIPTION VARCHAR2(255 BYTE) ,
  COMMENTS VARCHAR2(255 BYTE) ,
  TAG VARCHAR2(255 BYTE) ,
  LIQUIBASE VARCHAR2(20 BYTE) ,
  CONTEXTS VARCHAR2(255 BYTE) ,
  LABELS VARCHAR2(255 BYTE) ,
  DEPLOYMENT_ID VARCHAR2(10 BYTE)
);

-- ----------------------------
-- Records of FLW_EV_DATABASECHANGELOG
-- ----------------------------
INSERT INTO FLW_EV_DATABASECHANGELOG VALUES ('1', 'flowable', 'org/flowable/eventregistry/db/liquibase/flowable-eventregistry-db-changelog.xml', TO_TIMESTAMP('2022-03-20 21:04:36.335984', 'SYYYY-MM-DD HH24:MI:SS:FF6'), '1', 'EXECUTED', '8:1b0c48c9cf7945be799d868a2626d687', 'createTable tableName=FLW_EVENT_DEPLOYMENT; createTable tableName=FLW_EVENT_RESOURCE; createTable tableName=FLW_EVENT_DEFINITION; createIndex indexName=ACT_IDX_EVENT_DEF_UNIQ, tableName=FLW_EVENT_DEFINITION; createTable tableName=FLW_CHANNEL_DEFIN...', NULL, NULL, '4.3.5', NULL, NULL, '7781475911');
COMMIT;

-- ----------------------------
-- Table structure for FLW_EV_DATABASECHANGELOGLOCK
-- ----------------------------
DROP TABLE FLW_EV_DATABASECHANGELOGLOCK;
CREATE TABLE FLW_EV_DATABASECHANGELOGLOCK (
  ID NUMBER NOT NULL ,
  LOCKED NUMBER(1) NOT NULL ,
  LOCKGRANTED TIMESTAMP(6) ,
  LOCKEDBY VARCHAR2(255 BYTE)
);

-- ----------------------------
-- Records of FLW_EV_DATABASECHANGELOGLOCK
-- ----------------------------
INSERT INTO FLW_EV_DATABASECHANGELOGLOCK VALUES ('1', '0', NULL, NULL);
COMMIT;

-- ----------------------------
-- Table structure for FLW_EVENT_DEFINITION
-- ----------------------------
DROP TABLE FLW_EVENT_DEFINITION;
CREATE TABLE FLW_EVENT_DEFINITION (
  ID_ VARCHAR2(255 BYTE) NOT NULL ,
  NAME_ VARCHAR2(255 BYTE) ,
  VERSION_ NUMBER ,
  KEY_ VARCHAR2(255 BYTE) ,
  CATEGORY_ VARCHAR2(255 BYTE) ,
  DEPLOYMENT_ID_ VARCHAR2(255 BYTE) ,
  TENANT_ID_ VARCHAR2(255 BYTE) ,
  RESOURCE_NAME_ VARCHAR2(255 BYTE) ,
  DESCRIPTION_ VARCHAR2(255 BYTE)
);

-- ----------------------------
-- Table structure for FLW_EVENT_DEPLOYMENT
-- ----------------------------
DROP TABLE FLW_EVENT_DEPLOYMENT;
CREATE TABLE FLW_EVENT_DEPLOYMENT (
  ID_ VARCHAR2(255 BYTE) NOT NULL ,
  NAME_ VARCHAR2(255 BYTE) ,
  CATEGORY_ VARCHAR2(255 BYTE) ,
  DEPLOY_TIME_ TIMESTAMP(3) ,
  TENANT_ID_ VARCHAR2(255 BYTE) ,
  PARENT_DEPLOYMENT_ID_ VARCHAR2(255 BYTE)
);

-- ----------------------------
-- Table structure for FLW_EVENT_RESOURCE
-- ----------------------------
DROP TABLE FLW_EVENT_RESOURCE;
CREATE TABLE FLW_EVENT_RESOURCE (
  ID_ VARCHAR2(255 BYTE) NOT NULL ,
  NAME_ VARCHAR2(255 BYTE) ,
  DEPLOYMENT_ID_ VARCHAR2(255 BYTE) ,
  RESOURCE_BYTES_ BLOB
);

-- ----------------------------
-- Table structure for FLW_RU_BATCH
-- ----------------------------
DROP TABLE FLW_RU_BATCH;
CREATE TABLE FLW_RU_BATCH (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  TYPE_ NVARCHAR2(64) NOT NULL ,
  SEARCH_KEY_ NVARCHAR2(255) ,
  SEARCH_KEY2_ NVARCHAR2(255) ,
  CREATE_TIME_ TIMESTAMP(6) NOT NULL ,
  COMPLETE_TIME_ TIMESTAMP(6) ,
  STATUS_ NVARCHAR2(255) ,
  BATCH_DOC_ID_ NVARCHAR2(64) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Table structure for FLW_RU_BATCH_PART
-- ----------------------------
DROP TABLE FLW_RU_BATCH_PART;
CREATE TABLE FLW_RU_BATCH_PART (
  ID_ NVARCHAR2(64) NOT NULL ,
  REV_ NUMBER ,
  BATCH_ID_ NVARCHAR2(64) ,
  TYPE_ NVARCHAR2(64) NOT NULL ,
  SCOPE_ID_ NVARCHAR2(64) ,
  SUB_SCOPE_ID_ NVARCHAR2(64) ,
  SCOPE_TYPE_ NVARCHAR2(64) ,
  SEARCH_KEY_ NVARCHAR2(255) ,
  SEARCH_KEY2_ NVARCHAR2(255) ,
  CREATE_TIME_ TIMESTAMP(6) NOT NULL ,
  COMPLETE_TIME_ TIMESTAMP(6) ,
  STATUS_ NVARCHAR2(255) ,
  RESULT_DOC_ID_ NVARCHAR2(64) ,
  TENANT_ID_ NVARCHAR2(255) DEFAULT ''
);

-- ----------------------------
-- Primary Key structure for table ACT_EVT_LOG
-- ----------------------------
ALTER TABLE ACT_EVT_LOG ADD CONSTRAINT SYS_C0015871 PRIMARY KEY (LOG_NR_);

-- ----------------------------
-- Checks structure for table ACT_EVT_LOG
-- ----------------------------
ALTER TABLE ACT_EVT_LOG ADD CONSTRAINT SYS_C0015870 CHECK (TIME_STAMP_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table ACT_GE_BYTEARRAY
-- ----------------------------
ALTER TABLE ACT_GE_BYTEARRAY ADD CONSTRAINT SYS_C0015752 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_GE_BYTEARRAY
-- ----------------------------
ALTER TABLE ACT_GE_BYTEARRAY ADD CONSTRAINT SYS_C0015751 CHECK (GENERATED_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_GE_BYTEARRAY
-- ----------------------------
CREATE INDEX ACT_IDX_BYTEAR_DEPL
  ON ACT_GE_BYTEARRAY (DEPLOYMENT_ID_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_GE_PROPERTY
-- ----------------------------
ALTER TABLE ACT_GE_PROPERTY ADD CONSTRAINT SYS_C0015750 PRIMARY KEY (NAME_);

-- ----------------------------
-- Primary Key structure for table ACT_HI_ACTINST
-- ----------------------------
ALTER TABLE ACT_HI_ACTINST ADD CONSTRAINT SYS_C0015929 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_HI_ACTINST
-- ----------------------------
ALTER TABLE ACT_HI_ACTINST ADD CONSTRAINT SYS_C0015922 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_ACTINST ADD CONSTRAINT SYS_C0015923 CHECK (PROC_DEF_ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_ACTINST ADD CONSTRAINT SYS_C0015924 CHECK (PROC_INST_ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_ACTINST ADD CONSTRAINT SYS_C0015925 CHECK (EXECUTION_ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_ACTINST ADD CONSTRAINT SYS_C0015926 CHECK (ACT_ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_ACTINST ADD CONSTRAINT SYS_C0015927 CHECK (ACT_TYPE_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_ACTINST ADD CONSTRAINT SYS_C0015928 CHECK (START_TIME_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_HI_ACTINST
-- ----------------------------
CREATE INDEX ACT_IDX_HI_ACT_INST_END
  ON ACT_HI_ACTINST (END_TIME_ ASC);
CREATE INDEX ACT_IDX_HI_ACT_INST_EXEC
  ON ACT_HI_ACTINST (EXECUTION_ID_ ASC, ACT_ID_ ASC);
CREATE INDEX ACT_IDX_HI_ACT_INST_PROCINST
  ON ACT_HI_ACTINST (PROC_INST_ID_ ASC, ACT_ID_ ASC);
CREATE INDEX ACT_IDX_HI_ACT_INST_START
  ON ACT_HI_ACTINST (START_TIME_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_HI_ATTACHMENT
-- ----------------------------
ALTER TABLE ACT_HI_ATTACHMENT ADD CONSTRAINT SYS_C0015939 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_HI_ATTACHMENT
-- ----------------------------
ALTER TABLE ACT_HI_ATTACHMENT ADD CONSTRAINT SYS_C0015938 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table ACT_HI_COMMENT
-- ----------------------------
ALTER TABLE ACT_HI_COMMENT ADD CONSTRAINT SYS_C0015937 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_HI_COMMENT
-- ----------------------------
ALTER TABLE ACT_HI_COMMENT ADD CONSTRAINT SYS_C0015935 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_COMMENT ADD CONSTRAINT SYS_C0015936 CHECK (TIME_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table ACT_HI_DETAIL
-- ----------------------------
ALTER TABLE ACT_HI_DETAIL ADD CONSTRAINT SYS_C0015934 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_HI_DETAIL
-- ----------------------------
ALTER TABLE ACT_HI_DETAIL ADD CONSTRAINT SYS_C0015930 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_DETAIL ADD CONSTRAINT SYS_C0015931 CHECK (TYPE_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_DETAIL ADD CONSTRAINT SYS_C0015932 CHECK (NAME_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_DETAIL ADD CONSTRAINT SYS_C0015933 CHECK (TIME_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_HI_DETAIL
-- ----------------------------
CREATE INDEX ACT_IDX_HI_DETAIL_ACT_INST
  ON ACT_HI_DETAIL (ACT_INST_ID_ ASC);
CREATE INDEX ACT_IDX_HI_DETAIL_NAME
  ON ACT_HI_DETAIL (NAME_ ASC);
CREATE INDEX ACT_IDX_HI_DETAIL_PROC_INST
  ON ACT_HI_DETAIL (PROC_INST_ID_ ASC);
CREATE INDEX ACT_IDX_HI_DETAIL_TASK_ID
  ON ACT_HI_DETAIL (TASK_ID_ ASC);
CREATE INDEX ACT_IDX_HI_DETAIL_TIME
  ON ACT_HI_DETAIL (TIME_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_HI_ENTITYLINK
-- ----------------------------
ALTER TABLE ACT_HI_ENTITYLINK ADD CONSTRAINT SYS_C0015791 PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_HI_ENTITYLINK
-- ----------------------------
CREATE INDEX ACT_IDX_HI_ENT_LNK_ROOT_SCOPE
  ON ACT_HI_ENTITYLINK (LINK_TYPE_ ASC, ROOT_SCOPE_ID_ ASC, ROOT_SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_HI_ENT_LNK_SCOPE
  ON ACT_HI_ENTITYLINK (SCOPE_TYPE_ ASC, SCOPE_ID_ ASC, LINK_TYPE_ ASC);
CREATE INDEX ACT_IDX_HI_ENT_LNK_SCOPE_DEF
  ON ACT_HI_ENTITYLINK (LINK_TYPE_ ASC, SCOPE_DEFINITION_ID_ ASC, SCOPE_TYPE_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_HI_IDENTITYLINK
-- ----------------------------
ALTER TABLE ACT_HI_IDENTITYLINK ADD CONSTRAINT SYS_C0015789 PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_HI_IDENTITYLINK
-- ----------------------------
CREATE INDEX ACT_IDX_HI_IDENT_LNK_PROCINST
  ON ACT_HI_IDENTITYLINK (PROC_INST_ID_ ASC);
CREATE INDEX ACT_IDX_HI_IDENT_LNK_SCOPE
  ON ACT_HI_IDENTITYLINK (SCOPE_TYPE_ ASC, SCOPE_ID_ ASC);
CREATE INDEX ACT_IDX_HI_IDENT_LNK_SCOPE_DEF
  ON ACT_HI_IDENTITYLINK (SCOPE_DEFINITION_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_HI_IDENT_LNK_SUB_SCOPE
  ON ACT_HI_IDENTITYLINK (SUB_SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_HI_IDENT_LNK_TASK
  ON ACT_HI_IDENTITYLINK (TASK_ID_ ASC);
CREATE INDEX ACT_IDX_HI_IDENT_LNK_USER
  ON ACT_HI_IDENTITYLINK (USER_ID_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_HI_PROCINST
-- ----------------------------
ALTER TABLE ACT_HI_PROCINST ADD CONSTRAINT SYS_C0015920 PRIMARY KEY (ID_);

-- ----------------------------
-- Uniques structure for table ACT_HI_PROCINST
-- ----------------------------
ALTER TABLE ACT_HI_PROCINST ADD CONSTRAINT SYS_C0015921 UNIQUE (PROC_INST_ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table ACT_HI_PROCINST
-- ----------------------------
ALTER TABLE ACT_HI_PROCINST ADD CONSTRAINT SYS_C0015916 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_PROCINST ADD CONSTRAINT SYS_C0015917 CHECK (PROC_INST_ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_PROCINST ADD CONSTRAINT SYS_C0015918 CHECK (PROC_DEF_ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_PROCINST ADD CONSTRAINT SYS_C0015919 CHECK (START_TIME_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_HI_PROCINST
-- ----------------------------
CREATE INDEX ACT_IDX_HI_PRO_INST_END
  ON ACT_HI_PROCINST (END_TIME_ ASC);
CREATE INDEX ACT_IDX_HI_PRO_I_BUSKEY
  ON ACT_HI_PROCINST (BUSINESS_KEY_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_HI_TASKINST
-- ----------------------------
ALTER TABLE ACT_HI_TASKINST ADD CONSTRAINT SYS_C0015800 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_HI_TASKINST
-- ----------------------------
ALTER TABLE ACT_HI_TASKINST ADD CONSTRAINT SYS_C0015798 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_TASKINST ADD CONSTRAINT SYS_C0015799 CHECK (START_TIME_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_HI_TASKINST
-- ----------------------------
CREATE INDEX ACT_IDX_HI_TASK_INST_PROCINST
  ON ACT_HI_TASKINST (PROC_INST_ID_ ASC);
CREATE INDEX ACT_IDX_HI_TASK_SCOPE
  ON ACT_HI_TASKINST (SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_HI_TASK_SCOPE_DEF
  ON ACT_HI_TASKINST (SCOPE_DEFINITION_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_HI_TASK_SUB_SCOPE
  ON ACT_HI_TASKINST (SCOPE_TYPE_ ASC, SUB_SCOPE_ID_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_HI_TSK_LOG
-- ----------------------------
ALTER TABLE ACT_HI_TSK_LOG ADD CONSTRAINT SYS_C0015803 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_HI_TSK_LOG
-- ----------------------------
ALTER TABLE ACT_HI_TSK_LOG ADD CONSTRAINT SYS_C0015801 CHECK (TASK_ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_TSK_LOG ADD CONSTRAINT SYS_C0015802 CHECK (TIME_STAMP_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table ACT_HI_VARINST
-- ----------------------------
ALTER TABLE ACT_HI_VARINST ADD CONSTRAINT SYS_C0015811 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_HI_VARINST
-- ----------------------------
ALTER TABLE ACT_HI_VARINST ADD CONSTRAINT SYS_C0015809 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_HI_VARINST ADD CONSTRAINT SYS_C0015810 CHECK (NAME_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_HI_VARINST
-- ----------------------------
CREATE INDEX ACT_IDX_HI_PROCVAR_EXE
  ON ACT_HI_VARINST (EXECUTION_ID_ ASC);
CREATE INDEX ACT_IDX_HI_PROCVAR_NAME_TYPE
  ON ACT_HI_VARINST (VAR_TYPE_ ASC, NAME_ ASC);
CREATE INDEX ACT_IDX_HI_PROCVAR_PROC_INST
  ON ACT_HI_VARINST (PROC_INST_ID_ ASC);
CREATE INDEX ACT_IDX_HI_PROCVAR_TASK_ID
  ON ACT_HI_VARINST (TASK_ID_ ASC);
CREATE INDEX ACT_IDX_HI_VAR_SCOPE_ID_TYPE
  ON ACT_HI_VARINST (SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_HI_VAR_SUB_ID_TYPE
  ON ACT_HI_VARINST (SUB_SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_ID_BYTEARRAY
-- ----------------------------
ALTER TABLE ACT_ID_BYTEARRAY ADD CONSTRAINT SYS_C0015771 PRIMARY KEY (ID_);

-- ----------------------------
-- Primary Key structure for table ACT_ID_GROUP
-- ----------------------------
ALTER TABLE ACT_ID_GROUP ADD CONSTRAINT SYS_C0015772 PRIMARY KEY (ID_);

-- ----------------------------
-- Primary Key structure for table ACT_ID_INFO
-- ----------------------------
ALTER TABLE ACT_ID_INFO ADD CONSTRAINT SYS_C0015775 PRIMARY KEY (ID_);

-- ----------------------------
-- Primary Key structure for table ACT_ID_MEMBERSHIP
-- ----------------------------
ALTER TABLE ACT_ID_MEMBERSHIP ADD CONSTRAINT SYS_C0015773 PRIMARY KEY (USER_ID_, GROUP_ID_);

-- ----------------------------
-- Indexes structure for table ACT_ID_MEMBERSHIP
-- ----------------------------
CREATE INDEX ACT_IDX_MEMB_GROUP
  ON ACT_ID_MEMBERSHIP (GROUP_ID_ ASC);
CREATE INDEX ACT_IDX_MEMB_USER
  ON ACT_ID_MEMBERSHIP (USER_ID_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_ID_PRIV
-- ----------------------------
ALTER TABLE ACT_ID_PRIV ADD CONSTRAINT SYS_C0015780 PRIMARY KEY (ID_);

-- ----------------------------
-- Uniques structure for table ACT_ID_PRIV
-- ----------------------------
ALTER TABLE ACT_ID_PRIV ADD CONSTRAINT ACT_UNIQ_PRIV_NAME UNIQUE (NAME_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table ACT_ID_PRIV
-- ----------------------------
ALTER TABLE ACT_ID_PRIV ADD CONSTRAINT SYS_C0015778 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_ID_PRIV ADD CONSTRAINT SYS_C0015779 CHECK (NAME_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table ACT_ID_PRIV_MAPPING
-- ----------------------------
ALTER TABLE ACT_ID_PRIV_MAPPING ADD CONSTRAINT SYS_C0015783 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_ID_PRIV_MAPPING
-- ----------------------------
ALTER TABLE ACT_ID_PRIV_MAPPING ADD CONSTRAINT SYS_C0015781 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_ID_PRIV_MAPPING ADD CONSTRAINT SYS_C0015782 CHECK (PRIV_ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_ID_PRIV_MAPPING
-- ----------------------------
CREATE INDEX ACT_IDX_PRIV_GROUP
  ON ACT_ID_PRIV_MAPPING (GROUP_ID_ ASC);
CREATE INDEX ACT_IDX_PRIV_MAPPING
  ON ACT_ID_PRIV_MAPPING (PRIV_ID_ ASC);
CREATE INDEX ACT_IDX_PRIV_USER
  ON ACT_ID_PRIV_MAPPING (USER_ID_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_ID_PROPERTY
-- ----------------------------
ALTER TABLE ACT_ID_PROPERTY ADD CONSTRAINT SYS_C0015770 PRIMARY KEY (NAME_);

-- ----------------------------
-- Primary Key structure for table ACT_ID_TOKEN
-- ----------------------------
ALTER TABLE ACT_ID_TOKEN ADD CONSTRAINT SYS_C0015777 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_ID_TOKEN
-- ----------------------------
ALTER TABLE ACT_ID_TOKEN ADD CONSTRAINT SYS_C0015776 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table ACT_ID_USER
-- ----------------------------
ALTER TABLE ACT_ID_USER ADD CONSTRAINT SYS_C0015774 PRIMARY KEY (ID_);

-- ----------------------------
-- Primary Key structure for table ACT_PROCDEF_INFO
-- ----------------------------
ALTER TABLE ACT_PROCDEF_INFO ADD CONSTRAINT SYS_C0015874 PRIMARY KEY (ID_);

-- ----------------------------
-- Uniques structure for table ACT_PROCDEF_INFO
-- ----------------------------
ALTER TABLE ACT_PROCDEF_INFO ADD CONSTRAINT ACT_UNIQ_INFO_PROCDEF UNIQUE (PROC_DEF_ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table ACT_PROCDEF_INFO
-- ----------------------------
ALTER TABLE ACT_PROCDEF_INFO ADD CONSTRAINT SYS_C0015872 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_PROCDEF_INFO ADD CONSTRAINT SYS_C0015873 CHECK (PROC_DEF_ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_PROCDEF_INFO
-- ----------------------------
CREATE INDEX ACT_IDX_PROCDEF_INFO_JSON
  ON ACT_PROCDEF_INFO (INFO_JSON_ID_ ASC);
CREATE INDEX ACT_IDX_PROCDEF_INFO_PROC
  ON ACT_PROCDEF_INFO (PROC_DEF_ID_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_RE_DEPLOYMENT
-- ----------------------------
ALTER TABLE ACT_RE_DEPLOYMENT ADD CONSTRAINT SYS_C0015853 PRIMARY KEY (ID_);

-- ----------------------------
-- Primary Key structure for table ACT_RE_MODEL
-- ----------------------------
ALTER TABLE ACT_RE_MODEL ADD CONSTRAINT SYS_C0015855 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_RE_MODEL
-- ----------------------------
ALTER TABLE ACT_RE_MODEL ADD CONSTRAINT SYS_C0015854 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_RE_MODEL
-- ----------------------------
CREATE INDEX ACT_IDX_MODEL_DEPLOYMENT
  ON ACT_RE_MODEL (DEPLOYMENT_ID_ ASC);
CREATE INDEX ACT_IDX_MODEL_SOURCE
  ON ACT_RE_MODEL (EDITOR_SOURCE_VALUE_ID_ ASC);
CREATE INDEX ACT_IDX_MODEL_SOURCE_EXTRA
  ON ACT_RE_MODEL (EDITOR_SOURCE_EXTRA_VALUE_ID_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_RE_PROCDEF
-- ----------------------------
ALTER TABLE ACT_RE_PROCDEF ADD CONSTRAINT SYS_C0015869 PRIMARY KEY (ID_);

-- ----------------------------
-- Uniques structure for table ACT_RE_PROCDEF
-- ----------------------------
ALTER TABLE ACT_RE_PROCDEF ADD CONSTRAINT ACT_UNIQ_PROCDEF UNIQUE (KEY_, VERSION_, DERIVED_VERSION_, TENANT_ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table ACT_RE_PROCDEF
-- ----------------------------
ALTER TABLE ACT_RE_PROCDEF ADD CONSTRAINT SYS_C0015863 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RE_PROCDEF ADD CONSTRAINT SYS_C0015864 CHECK (KEY_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RE_PROCDEF ADD CONSTRAINT SYS_C0015865 CHECK (VERSION_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RE_PROCDEF ADD CONSTRAINT SYS_C0015866 CHECK (DERIVED_VERSION_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RE_PROCDEF ADD CONSTRAINT SYS_C0015867 CHECK (HAS_START_FORM_KEY_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RE_PROCDEF ADD CONSTRAINT SYS_C0015868 CHECK (HAS_GRAPHICAL_NOTATION_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table ACT_RU_ACTINST
-- ----------------------------
ALTER TABLE ACT_RU_ACTINST ADD CONSTRAINT SYS_C0015882 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_RU_ACTINST
-- ----------------------------
ALTER TABLE ACT_RU_ACTINST ADD CONSTRAINT SYS_C0015875 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_ACTINST ADD CONSTRAINT SYS_C0015876 CHECK (PROC_DEF_ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_ACTINST ADD CONSTRAINT SYS_C0015877 CHECK (PROC_INST_ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_ACTINST ADD CONSTRAINT SYS_C0015878 CHECK (EXECUTION_ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_ACTINST ADD CONSTRAINT SYS_C0015879 CHECK (ACT_ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_ACTINST ADD CONSTRAINT SYS_C0015880 CHECK (ACT_TYPE_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_ACTINST ADD CONSTRAINT SYS_C0015881 CHECK (START_TIME_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_RU_ACTINST
-- ----------------------------
CREATE INDEX ACT_IDX_RU_ACTI_END
  ON ACT_RU_ACTINST (END_TIME_ ASC);
CREATE INDEX ACT_IDX_RU_ACTI_EXEC
  ON ACT_RU_ACTINST (EXECUTION_ID_ ASC);
CREATE INDEX ACT_IDX_RU_ACTI_EXEC_ACT
  ON ACT_RU_ACTINST (ACT_ID_ ASC, EXECUTION_ID_ ASC);
CREATE INDEX ACT_IDX_RU_ACTI_PROC
  ON ACT_RU_ACTINST (PROC_INST_ID_ ASC);
CREATE INDEX ACT_IDX_RU_ACTI_PROC_ACT
  ON ACT_RU_ACTINST (ACT_ID_ ASC, PROC_INST_ID_ ASC);
CREATE INDEX ACT_IDX_RU_ACTI_START
  ON ACT_RU_ACTINST (START_TIME_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_RU_DEADLETTER_JOB
-- ----------------------------
ALTER TABLE ACT_RU_DEADLETTER_JOB ADD CONSTRAINT SYS_C0015827 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_RU_DEADLETTER_JOB
-- ----------------------------
ALTER TABLE ACT_RU_DEADLETTER_JOB ADD CONSTRAINT SYS_C0015824 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_DEADLETTER_JOB ADD CONSTRAINT SYS_C0015825 CHECK (TYPE_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_DEADLETTER_JOB ADD CONSTRAINT SYS_C0015826 CHECK (EXCLUSIVE_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_RU_DEADLETTER_JOB
-- ----------------------------
CREATE INDEX ACT_IDX_DJOB_CORRELATION_ID
  ON ACT_RU_DEADLETTER_JOB (CORRELATION_ID_ ASC);
CREATE INDEX ACT_IDX_DJOB_CUSTOM_VAL_ID
  ON ACT_RU_DEADLETTER_JOB (CUSTOM_VALUES_ID_ ASC);
CREATE INDEX ACT_IDX_DJOB_EXCEPTION
  ON ACT_RU_DEADLETTER_JOB (EXCEPTION_STACK_ID_ ASC);
CREATE INDEX ACT_IDX_DJOB_EXECUTION_ID
  ON ACT_RU_DEADLETTER_JOB (EXECUTION_ID_ ASC);
CREATE INDEX ACT_IDX_DJOB_PROC_DEF_ID
  ON ACT_RU_DEADLETTER_JOB (PROC_DEF_ID_ ASC);
CREATE INDEX ACT_IDX_DJOB_PROC_INST_ID
  ON ACT_RU_DEADLETTER_JOB (PROCESS_INSTANCE_ID_ ASC);
CREATE INDEX ACT_IDX_DJOB_SCOPE
  ON ACT_RU_DEADLETTER_JOB (SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_DJOB_SCOPE_DEF
  ON ACT_RU_DEADLETTER_JOB (SCOPE_DEFINITION_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_DJOB_SUB_SCOPE
  ON ACT_RU_DEADLETTER_JOB (SUB_SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_RU_ENTITYLINK
-- ----------------------------
ALTER TABLE ACT_RU_ENTITYLINK ADD CONSTRAINT SYS_C0015790 PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_RU_ENTITYLINK
-- ----------------------------
CREATE INDEX ACT_IDX_ENT_LNK_ROOT_SCOPE
  ON ACT_RU_ENTITYLINK (ROOT_SCOPE_TYPE_ ASC, LINK_TYPE_ ASC, ROOT_SCOPE_ID_ ASC);
CREATE INDEX ACT_IDX_ENT_LNK_SCOPE
  ON ACT_RU_ENTITYLINK (LINK_TYPE_ ASC, SCOPE_TYPE_ ASC, SCOPE_ID_ ASC);
CREATE INDEX ACT_IDX_ENT_LNK_SCOPE_DEF
  ON ACT_RU_ENTITYLINK (SCOPE_DEFINITION_ID_ ASC, LINK_TYPE_ ASC, SCOPE_TYPE_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_RU_EVENT_SUBSCR
-- ----------------------------
ALTER TABLE ACT_RU_EVENT_SUBSCR ADD CONSTRAINT SYS_C0015795 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_RU_EVENT_SUBSCR
-- ----------------------------
ALTER TABLE ACT_RU_EVENT_SUBSCR ADD CONSTRAINT SYS_C0015792 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_EVENT_SUBSCR ADD CONSTRAINT SYS_C0015793 CHECK (EVENT_TYPE_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_EVENT_SUBSCR ADD CONSTRAINT SYS_C0015794 CHECK (CREATED_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_RU_EVENT_SUBSCR
-- ----------------------------
CREATE INDEX ACT_IDX_EVENT_SUBSCR
  ON ACT_RU_EVENT_SUBSCR (EXECUTION_ID_ ASC);
CREATE INDEX ACT_IDX_EVENT_SUBSCR_CONFIG_
  ON ACT_RU_EVENT_SUBSCR (CONFIGURATION_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_RU_EXECUTION
-- ----------------------------
ALTER TABLE ACT_RU_EXECUTION ADD CONSTRAINT SYS_C0015862 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_RU_EXECUTION
-- ----------------------------
ALTER TABLE ACT_RU_EXECUTION ADD CONSTRAINT SYS_C0015856 CHECK (IS_ACTIVE_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_EXECUTION ADD CONSTRAINT SYS_C0015857 CHECK (IS_CONCURRENT_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_EXECUTION ADD CONSTRAINT SYS_C0015858 CHECK (IS_SCOPE_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_EXECUTION ADD CONSTRAINT SYS_C0015859 CHECK (IS_EVENT_SCOPE_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_EXECUTION ADD CONSTRAINT SYS_C0015860 CHECK (IS_MI_ROOT_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_EXECUTION ADD CONSTRAINT SYS_C0015861 CHECK (IS_COUNT_ENABLED_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_RU_EXECUTION
-- ----------------------------
CREATE INDEX ACT_IDX_EXEC_BUSKEY
  ON ACT_RU_EXECUTION (BUSINESS_KEY_ ASC);
CREATE INDEX ACT_IDX_EXEC_ROOT
  ON ACT_RU_EXECUTION (ROOT_PROC_INST_ID_ ASC);
CREATE INDEX ACT_IDX_EXE_PARENT
  ON ACT_RU_EXECUTION (PARENT_ID_ ASC);
CREATE INDEX ACT_IDX_EXE_PROCDEF
  ON ACT_RU_EXECUTION (PROC_DEF_ID_ ASC);
CREATE INDEX ACT_IDX_EXE_PROCINST
  ON ACT_RU_EXECUTION (PROC_INST_ID_ ASC);
CREATE INDEX ACT_IDX_EXE_SUPER
  ON ACT_RU_EXECUTION (SUPER_EXEC_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_RU_EXTERNAL_JOB
-- ----------------------------
ALTER TABLE ACT_RU_EXTERNAL_JOB ADD CONSTRAINT SYS_C0015833 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_RU_EXTERNAL_JOB
-- ----------------------------
ALTER TABLE ACT_RU_EXTERNAL_JOB ADD CONSTRAINT SYS_C0015830 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_EXTERNAL_JOB ADD CONSTRAINT SYS_C0015831 CHECK (TYPE_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_EXTERNAL_JOB ADD CONSTRAINT SYS_C0015832 CHECK (EXCLUSIVE_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_RU_EXTERNAL_JOB
-- ----------------------------
CREATE INDEX ACT_IDX_EJOB_CORRELATION_ID
  ON ACT_RU_EXTERNAL_JOB (CORRELATION_ID_ ASC);
CREATE INDEX ACT_IDX_EJOB_CUSTOM_VAL_ID
  ON ACT_RU_EXTERNAL_JOB (CUSTOM_VALUES_ID_ ASC);
CREATE INDEX ACT_IDX_EJOB_EXCEPTION
  ON ACT_RU_EXTERNAL_JOB (EXCEPTION_STACK_ID_ ASC);
CREATE INDEX ACT_IDX_EJOB_SCOPE
  ON ACT_RU_EXTERNAL_JOB (SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_EJOB_SCOPE_DEF
  ON ACT_RU_EXTERNAL_JOB (SCOPE_DEFINITION_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_EJOB_SUB_SCOPE
  ON ACT_RU_EXTERNAL_JOB (SUB_SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_RU_HISTORY_JOB
-- ----------------------------
ALTER TABLE ACT_RU_HISTORY_JOB ADD CONSTRAINT SYS_C0015829 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_RU_HISTORY_JOB
-- ----------------------------
ALTER TABLE ACT_RU_HISTORY_JOB ADD CONSTRAINT SYS_C0015828 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table ACT_RU_IDENTITYLINK
-- ----------------------------
ALTER TABLE ACT_RU_IDENTITYLINK ADD CONSTRAINT SYS_C0015788 PRIMARY KEY (ID_);

-- ----------------------------
-- Indexes structure for table ACT_RU_IDENTITYLINK
-- ----------------------------
CREATE INDEX ACT_IDX_ATHRZ_PROCEDEF
  ON ACT_RU_IDENTITYLINK (PROC_DEF_ID_ ASC);
CREATE INDEX ACT_IDX_IDENT_LNK_GROUP
  ON ACT_RU_IDENTITYLINK (GROUP_ID_ ASC);
CREATE INDEX ACT_IDX_IDENT_LNK_SCOPE
  ON ACT_RU_IDENTITYLINK (SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_IDENT_LNK_SCOPE_DEF
  ON ACT_RU_IDENTITYLINK (SCOPE_TYPE_ ASC, SCOPE_DEFINITION_ID_ ASC);
CREATE INDEX ACT_IDX_IDENT_LNK_SUB_SCOPE
  ON ACT_RU_IDENTITYLINK (SUB_SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_IDENT_LNK_USER
  ON ACT_RU_IDENTITYLINK (USER_ID_ ASC);
CREATE INDEX ACT_IDX_IDL_PROCINST
  ON ACT_RU_IDENTITYLINK (PROC_INST_ID_ ASC);
CREATE INDEX ACT_IDX_TSKASS_TASK
  ON ACT_RU_IDENTITYLINK (TASK_ID_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_RU_JOB
-- ----------------------------
ALTER TABLE ACT_RU_JOB ADD CONSTRAINT SYS_C0015815 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_RU_JOB
-- ----------------------------
ALTER TABLE ACT_RU_JOB ADD CONSTRAINT SYS_C0015812 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_JOB ADD CONSTRAINT SYS_C0015813 CHECK (TYPE_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_JOB ADD CONSTRAINT SYS_C0015814 CHECK (EXCLUSIVE_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_RU_JOB
-- ----------------------------
CREATE INDEX ACT_IDX_JOB_CORRELATION_ID
  ON ACT_RU_JOB (CORRELATION_ID_ ASC);
CREATE INDEX ACT_IDX_JOB_CUSTOM_VAL_ID
  ON ACT_RU_JOB (CUSTOM_VALUES_ID_ ASC);
CREATE INDEX ACT_IDX_JOB_EXCEPTION
  ON ACT_RU_JOB (EXCEPTION_STACK_ID_ ASC);
CREATE INDEX ACT_IDX_JOB_EXECUTION_ID
  ON ACT_RU_JOB (EXECUTION_ID_ ASC);
CREATE INDEX ACT_IDX_JOB_PROC_DEF_ID
  ON ACT_RU_JOB (PROC_DEF_ID_ ASC);
CREATE INDEX ACT_IDX_JOB_PROC_INST_ID
  ON ACT_RU_JOB (PROCESS_INSTANCE_ID_ ASC);
CREATE INDEX ACT_IDX_JOB_SCOPE
  ON ACT_RU_JOB (SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_JOB_SCOPE_DEF
  ON ACT_RU_JOB (SCOPE_DEFINITION_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_JOB_SUB_SCOPE
  ON ACT_RU_JOB (SUB_SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_RU_SUSPENDED_JOB
-- ----------------------------
ALTER TABLE ACT_RU_SUSPENDED_JOB ADD CONSTRAINT SYS_C0015823 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_RU_SUSPENDED_JOB
-- ----------------------------
ALTER TABLE ACT_RU_SUSPENDED_JOB ADD CONSTRAINT SYS_C0015820 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_SUSPENDED_JOB ADD CONSTRAINT SYS_C0015821 CHECK (TYPE_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_SUSPENDED_JOB ADD CONSTRAINT SYS_C0015822 CHECK (EXCLUSIVE_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_RU_SUSPENDED_JOB
-- ----------------------------
CREATE INDEX ACT_IDX_SJOB_CORRELATION_ID
  ON ACT_RU_SUSPENDED_JOB (CORRELATION_ID_ ASC);
CREATE INDEX ACT_IDX_SJOB_CUSTOM_VAL_ID
  ON ACT_RU_SUSPENDED_JOB (CUSTOM_VALUES_ID_ ASC);
CREATE INDEX ACT_IDX_SJOB_EXCEPTION
  ON ACT_RU_SUSPENDED_JOB (EXCEPTION_STACK_ID_ ASC);
CREATE INDEX ACT_IDX_SJOB_EXECUTION_ID
  ON ACT_RU_SUSPENDED_JOB (EXECUTION_ID_ ASC);
CREATE INDEX ACT_IDX_SJOB_PROC_DEF_ID
  ON ACT_RU_SUSPENDED_JOB (PROC_DEF_ID_ ASC);
CREATE INDEX ACT_IDX_SJOB_PROC_INST_ID
  ON ACT_RU_SUSPENDED_JOB (PROCESS_INSTANCE_ID_ ASC);
CREATE INDEX ACT_IDX_SJOB_SCOPE
  ON ACT_RU_SUSPENDED_JOB (SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_SJOB_SCOPE_DEF
  ON ACT_RU_SUSPENDED_JOB (SCOPE_DEFINITION_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_SJOB_SUB_SCOPE
  ON ACT_RU_SUSPENDED_JOB (SUB_SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_RU_TASK
-- ----------------------------
ALTER TABLE ACT_RU_TASK ADD CONSTRAINT SYS_C0015797 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_RU_TASK
-- ----------------------------
ALTER TABLE ACT_RU_TASK ADD CONSTRAINT SYS_C0015796 CHECK (IS_COUNT_ENABLED_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_RU_TASK
-- ----------------------------
CREATE INDEX ACT_IDX_TASK_CREATE
  ON ACT_RU_TASK (CREATE_TIME_ ASC);
CREATE INDEX ACT_IDX_TASK_EXEC
  ON ACT_RU_TASK (EXECUTION_ID_ ASC);
CREATE INDEX ACT_IDX_TASK_PROCDEF
  ON ACT_RU_TASK (PROC_DEF_ID_ ASC);
CREATE INDEX ACT_IDX_TASK_PROCINST
  ON ACT_RU_TASK (PROC_INST_ID_ ASC);
CREATE INDEX ACT_IDX_TASK_SCOPE
  ON ACT_RU_TASK (SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_TASK_SCOPE_DEF
  ON ACT_RU_TASK (SCOPE_DEFINITION_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_TASK_SUB_SCOPE
  ON ACT_RU_TASK (SUB_SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_RU_TIMER_JOB
-- ----------------------------
ALTER TABLE ACT_RU_TIMER_JOB ADD CONSTRAINT SYS_C0015819 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_RU_TIMER_JOB
-- ----------------------------
ALTER TABLE ACT_RU_TIMER_JOB ADD CONSTRAINT SYS_C0015816 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_TIMER_JOB ADD CONSTRAINT SYS_C0015817 CHECK (TYPE_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_TIMER_JOB ADD CONSTRAINT SYS_C0015818 CHECK (EXCLUSIVE_ IN (1,0)) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_RU_TIMER_JOB
-- ----------------------------
CREATE INDEX ACT_IDX_TJOB_CORRELATION_ID
  ON ACT_RU_TIMER_JOB (CORRELATION_ID_ ASC);
CREATE INDEX ACT_IDX_TJOB_CUSTOM_VAL_ID
  ON ACT_RU_TIMER_JOB (CUSTOM_VALUES_ID_ ASC);
CREATE INDEX ACT_IDX_TJOB_EXCEPTION
  ON ACT_RU_TIMER_JOB (EXCEPTION_STACK_ID_ ASC);
CREATE INDEX ACT_IDX_TJOB_EXECUTION_ID
  ON ACT_RU_TIMER_JOB (EXECUTION_ID_ ASC);
CREATE INDEX ACT_IDX_TJOB_PROC_DEF_ID
  ON ACT_RU_TIMER_JOB (PROC_DEF_ID_ ASC);
CREATE INDEX ACT_IDX_TJOB_PROC_INST_ID
  ON ACT_RU_TIMER_JOB (PROCESS_INSTANCE_ID_ ASC);
CREATE INDEX ACT_IDX_TJOB_SCOPE
  ON ACT_RU_TIMER_JOB (SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_TJOB_SCOPE_DEF
  ON ACT_RU_TIMER_JOB (SCOPE_DEFINITION_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_TJOB_SUB_SCOPE
  ON ACT_RU_TIMER_JOB (SUB_SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);

-- ----------------------------
-- Primary Key structure for table ACT_RU_VARIABLE
-- ----------------------------
ALTER TABLE ACT_RU_VARIABLE ADD CONSTRAINT SYS_C0015807 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table ACT_RU_VARIABLE
-- ----------------------------
ALTER TABLE ACT_RU_VARIABLE ADD CONSTRAINT SYS_C0015804 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_VARIABLE ADD CONSTRAINT SYS_C0015805 CHECK (TYPE_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_VARIABLE ADD CONSTRAINT SYS_C0015806 CHECK (NAME_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table ACT_RU_VARIABLE
-- ----------------------------
CREATE INDEX ACT_IDX_RU_VAR_SCOPE_ID_TYPE
  ON ACT_RU_VARIABLE (SCOPE_ID_ ASC, SCOPE_TYPE_ ASC);
CREATE INDEX ACT_IDX_RU_VAR_SUB_ID_TYPE
  ON ACT_RU_VARIABLE (SCOPE_TYPE_ ASC, SUB_SCOPE_ID_ ASC);
CREATE INDEX ACT_IDX_VARIABLE_TASK_ID
  ON ACT_RU_VARIABLE (TASK_ID_ ASC);
CREATE INDEX ACT_IDX_VAR_BYTEARRAY
  ON ACT_RU_VARIABLE (BYTEARRAY_ID_ ASC);
CREATE INDEX ACT_IDX_VAR_EXE
  ON ACT_RU_VARIABLE (EXECUTION_ID_ ASC);
CREATE INDEX ACT_IDX_VAR_PROCINST
  ON ACT_RU_VARIABLE (PROC_INST_ID_ ASC);

-- ----------------------------
-- Primary Key structure for table FLW_CHANNEL_DEFINITION
-- ----------------------------
ALTER TABLE FLW_CHANNEL_DEFINITION ADD CONSTRAINT PK_FLW_CHANNEL_DEFINITION PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table FLW_CHANNEL_DEFINITION
-- ----------------------------
ALTER TABLE FLW_CHANNEL_DEFINITION ADD CONSTRAINT SYS_C0015768 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table FLW_CHANNEL_DEFINITION
-- ----------------------------
CREATE UNIQUE INDEX ACT_IDX_CHANNEL_DEF_UNIQ
  ON FLW_CHANNEL_DEFINITION (KEY_ ASC, TENANT_ID_ ASC, VERSION_ ASC);

-- ----------------------------
-- Checks structure for table FLW_EV_DATABASECHANGELOG
-- ----------------------------
ALTER TABLE FLW_EV_DATABASECHANGELOG ADD CONSTRAINT SYS_C0015756 CHECK (ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE FLW_EV_DATABASECHANGELOG ADD CONSTRAINT SYS_C0015757 CHECK (AUTHOR IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE FLW_EV_DATABASECHANGELOG ADD CONSTRAINT SYS_C0015758 CHECK (FILENAME IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE FLW_EV_DATABASECHANGELOG ADD CONSTRAINT SYS_C0015759 CHECK (DATEEXECUTED IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE FLW_EV_DATABASECHANGELOG ADD CONSTRAINT SYS_C0015760 CHECK (ORDEREXECUTED IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE FLW_EV_DATABASECHANGELOG ADD CONSTRAINT SYS_C0015761 CHECK (EXECTYPE IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table FLW_EV_DATABASECHANGELOGLOCK
-- ----------------------------
ALTER TABLE FLW_EV_DATABASECHANGELOGLOCK ADD CONSTRAINT PK_FLW_EV_DATABASECHANGELOGLOC PRIMARY KEY (ID);

-- ----------------------------
-- Checks structure for table FLW_EV_DATABASECHANGELOGLOCK
-- ----------------------------
ALTER TABLE FLW_EV_DATABASECHANGELOGLOCK ADD CONSTRAINT SYS_C0015753 CHECK (ID IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE FLW_EV_DATABASECHANGELOGLOCK ADD CONSTRAINT SYS_C0015754 CHECK (LOCKED IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table FLW_EVENT_DEFINITION
-- ----------------------------
ALTER TABLE FLW_EVENT_DEFINITION ADD CONSTRAINT PK_FLW_EVENT_DEFINITION PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table FLW_EVENT_DEFINITION
-- ----------------------------
ALTER TABLE FLW_EVENT_DEFINITION ADD CONSTRAINT SYS_C0015766 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table FLW_EVENT_DEFINITION
-- ----------------------------
CREATE UNIQUE INDEX ACT_IDX_EVENT_DEF_UNIQ
  ON FLW_EVENT_DEFINITION (KEY_ ASC, TENANT_ID_ ASC, VERSION_ ASC);

-- ----------------------------
-- Primary Key structure for table FLW_EVENT_DEPLOYMENT
-- ----------------------------
ALTER TABLE FLW_EVENT_DEPLOYMENT ADD CONSTRAINT PK_FLW_EVENT_DEPLOYMENT PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table FLW_EVENT_DEPLOYMENT
-- ----------------------------
ALTER TABLE FLW_EVENT_DEPLOYMENT ADD CONSTRAINT SYS_C0015762 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table FLW_EVENT_RESOURCE
-- ----------------------------
ALTER TABLE FLW_EVENT_RESOURCE ADD CONSTRAINT PK_FLW_EVENT_RESOURCE PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table FLW_EVENT_RESOURCE
-- ----------------------------
ALTER TABLE FLW_EVENT_RESOURCE ADD CONSTRAINT SYS_C0015764 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table FLW_RU_BATCH
-- ----------------------------
ALTER TABLE FLW_RU_BATCH ADD CONSTRAINT SYS_C0015847 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table FLW_RU_BATCH
-- ----------------------------
ALTER TABLE FLW_RU_BATCH ADD CONSTRAINT SYS_C0015844 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE FLW_RU_BATCH ADD CONSTRAINT SYS_C0015845 CHECK (TYPE_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE FLW_RU_BATCH ADD CONSTRAINT SYS_C0015846 CHECK (CREATE_TIME_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table FLW_RU_BATCH_PART
-- ----------------------------
ALTER TABLE FLW_RU_BATCH_PART ADD CONSTRAINT SYS_C0015851 PRIMARY KEY (ID_);

-- ----------------------------
-- Checks structure for table FLW_RU_BATCH_PART
-- ----------------------------
ALTER TABLE FLW_RU_BATCH_PART ADD CONSTRAINT SYS_C0015848 CHECK (ID_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE FLW_RU_BATCH_PART ADD CONSTRAINT SYS_C0015849 CHECK (TYPE_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE FLW_RU_BATCH_PART ADD CONSTRAINT SYS_C0015850 CHECK (CREATE_TIME_ IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Indexes structure for table FLW_RU_BATCH_PART
-- ----------------------------
CREATE INDEX FLW_IDX_BATCH_PART
  ON FLW_RU_BATCH_PART (BATCH_ID_ ASC);

-- ----------------------------
-- Foreign Keys structure for table ACT_GE_BYTEARRAY
-- ----------------------------
ALTER TABLE ACT_GE_BYTEARRAY ADD CONSTRAINT ACT_FK_BYTEARR_DEPL FOREIGN KEY (DEPLOYMENT_ID_) REFERENCES ACT_RE_DEPLOYMENT (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_ID_MEMBERSHIP
-- ----------------------------
ALTER TABLE ACT_ID_MEMBERSHIP ADD CONSTRAINT ACT_FK_MEMB_GROUP FOREIGN KEY (GROUP_ID_) REFERENCES ACT_ID_GROUP (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_ID_MEMBERSHIP ADD CONSTRAINT ACT_FK_MEMB_USER FOREIGN KEY (USER_ID_) REFERENCES ACT_ID_USER (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_ID_PRIV_MAPPING
-- ----------------------------
ALTER TABLE ACT_ID_PRIV_MAPPING ADD CONSTRAINT ACT_FK_PRIV_MAPPING FOREIGN KEY (PRIV_ID_) REFERENCES ACT_ID_PRIV (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_PROCDEF_INFO
-- ----------------------------
ALTER TABLE ACT_PROCDEF_INFO ADD CONSTRAINT ACT_FK_INFO_JSON_BA FOREIGN KEY (INFO_JSON_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_PROCDEF_INFO ADD CONSTRAINT ACT_FK_INFO_PROCDEF FOREIGN KEY (PROC_DEF_ID_) REFERENCES ACT_RE_PROCDEF (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_RE_MODEL
-- ----------------------------
ALTER TABLE ACT_RE_MODEL ADD CONSTRAINT ACT_FK_MODEL_DEPLOYMENT FOREIGN KEY (DEPLOYMENT_ID_) REFERENCES ACT_RE_DEPLOYMENT (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RE_MODEL ADD CONSTRAINT ACT_FK_MODEL_SOURCE FOREIGN KEY (EDITOR_SOURCE_VALUE_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RE_MODEL ADD CONSTRAINT ACT_FK_MODEL_SOURCE_EXTRA FOREIGN KEY (EDITOR_SOURCE_EXTRA_VALUE_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_RU_DEADLETTER_JOB
-- ----------------------------
ALTER TABLE ACT_RU_DEADLETTER_JOB ADD CONSTRAINT ACT_FK_DJOB_CUSTOM_VAL FOREIGN KEY (CUSTOM_VALUES_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_DEADLETTER_JOB ADD CONSTRAINT ACT_FK_DJOB_EXCEPTION FOREIGN KEY (EXCEPTION_STACK_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_DEADLETTER_JOB ADD CONSTRAINT ACT_FK_DJOB_EXECUTION FOREIGN KEY (EXECUTION_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_DEADLETTER_JOB ADD CONSTRAINT ACT_FK_DJOB_PROCESS_INSTANCE FOREIGN KEY (PROCESS_INSTANCE_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_DEADLETTER_JOB ADD CONSTRAINT ACT_FK_DJOB_PROC_DEF FOREIGN KEY (PROC_DEF_ID_) REFERENCES ACT_RE_PROCDEF (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_RU_EVENT_SUBSCR
-- ----------------------------
ALTER TABLE ACT_RU_EVENT_SUBSCR ADD CONSTRAINT ACT_FK_EVENT_EXEC FOREIGN KEY (EXECUTION_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_RU_EXECUTION
-- ----------------------------
ALTER TABLE ACT_RU_EXECUTION ADD CONSTRAINT ACT_FK_EXE_PARENT FOREIGN KEY (PARENT_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_EXECUTION ADD CONSTRAINT ACT_FK_EXE_PROCDEF FOREIGN KEY (PROC_DEF_ID_) REFERENCES ACT_RE_PROCDEF (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_EXECUTION ADD CONSTRAINT ACT_FK_EXE_PROCINST FOREIGN KEY (PROC_INST_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_EXECUTION ADD CONSTRAINT ACT_FK_EXE_SUPER FOREIGN KEY (SUPER_EXEC_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_RU_EXTERNAL_JOB
-- ----------------------------
ALTER TABLE ACT_RU_EXTERNAL_JOB ADD CONSTRAINT ACT_FK_EJOB_CUSTOM_VAL FOREIGN KEY (CUSTOM_VALUES_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_EXTERNAL_JOB ADD CONSTRAINT ACT_FK_EJOB_EXCEPTION FOREIGN KEY (EXCEPTION_STACK_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_RU_IDENTITYLINK
-- ----------------------------
ALTER TABLE ACT_RU_IDENTITYLINK ADD CONSTRAINT ACT_FK_ATHRZ_PROCEDEF FOREIGN KEY (PROC_DEF_ID_) REFERENCES ACT_RE_PROCDEF (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_IDENTITYLINK ADD CONSTRAINT ACT_FK_IDL_PROCINST FOREIGN KEY (PROC_INST_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_IDENTITYLINK ADD CONSTRAINT ACT_FK_TSKASS_TASK FOREIGN KEY (TASK_ID_) REFERENCES ACT_RU_TASK (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_RU_JOB
-- ----------------------------
ALTER TABLE ACT_RU_JOB ADD CONSTRAINT ACT_FK_JOB_CUSTOM_VAL FOREIGN KEY (CUSTOM_VALUES_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_JOB ADD CONSTRAINT ACT_FK_JOB_EXCEPTION FOREIGN KEY (EXCEPTION_STACK_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_JOB ADD CONSTRAINT ACT_FK_JOB_EXECUTION FOREIGN KEY (EXECUTION_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_JOB ADD CONSTRAINT ACT_FK_JOB_PROCESS_INSTANCE FOREIGN KEY (PROCESS_INSTANCE_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_JOB ADD CONSTRAINT ACT_FK_JOB_PROC_DEF FOREIGN KEY (PROC_DEF_ID_) REFERENCES ACT_RE_PROCDEF (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_RU_SUSPENDED_JOB
-- ----------------------------
ALTER TABLE ACT_RU_SUSPENDED_JOB ADD CONSTRAINT ACT_FK_SJOB_CUSTOM_VAL FOREIGN KEY (CUSTOM_VALUES_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_SUSPENDED_JOB ADD CONSTRAINT ACT_FK_SJOB_EXCEPTION FOREIGN KEY (EXCEPTION_STACK_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_SUSPENDED_JOB ADD CONSTRAINT ACT_FK_SJOB_EXECUTION FOREIGN KEY (EXECUTION_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_SUSPENDED_JOB ADD CONSTRAINT ACT_FK_SJOB_PROCESS_INSTANCE FOREIGN KEY (PROCESS_INSTANCE_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_SUSPENDED_JOB ADD CONSTRAINT ACT_FK_SJOB_PROC_DEF FOREIGN KEY (PROC_DEF_ID_) REFERENCES ACT_RE_PROCDEF (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_RU_TASK
-- ----------------------------
ALTER TABLE ACT_RU_TASK ADD CONSTRAINT ACT_FK_TASK_EXE FOREIGN KEY (EXECUTION_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_TASK ADD CONSTRAINT ACT_FK_TASK_PROCDEF FOREIGN KEY (PROC_DEF_ID_) REFERENCES ACT_RE_PROCDEF (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_TASK ADD CONSTRAINT ACT_FK_TASK_PROCINST FOREIGN KEY (PROC_INST_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_RU_TIMER_JOB
-- ----------------------------
ALTER TABLE ACT_RU_TIMER_JOB ADD CONSTRAINT ACT_FK_TJOB_CUSTOM_VAL FOREIGN KEY (CUSTOM_VALUES_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_TIMER_JOB ADD CONSTRAINT ACT_FK_TJOB_EXCEPTION FOREIGN KEY (EXCEPTION_STACK_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_TIMER_JOB ADD CONSTRAINT ACT_FK_TJOB_EXECUTION FOREIGN KEY (EXECUTION_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_TIMER_JOB ADD CONSTRAINT ACT_FK_TJOB_PROCESS_INSTANCE FOREIGN KEY (PROCESS_INSTANCE_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_TIMER_JOB ADD CONSTRAINT ACT_FK_TJOB_PROC_DEF FOREIGN KEY (PROC_DEF_ID_) REFERENCES ACT_RE_PROCDEF (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ACT_RU_VARIABLE
-- ----------------------------
ALTER TABLE ACT_RU_VARIABLE ADD CONSTRAINT ACT_FK_VAR_BYTEARRAY FOREIGN KEY (BYTEARRAY_ID_) REFERENCES ACT_GE_BYTEARRAY (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_VARIABLE ADD CONSTRAINT ACT_FK_VAR_EXE FOREIGN KEY (EXECUTION_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE ACT_RU_VARIABLE ADD CONSTRAINT ACT_FK_VAR_PROCINST FOREIGN KEY (PROC_INST_ID_) REFERENCES ACT_RU_EXECUTION (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table FLW_RU_BATCH_PART
-- ----------------------------
ALTER TABLE FLW_RU_BATCH_PART ADD CONSTRAINT FLW_FK_BATCH_PART_PARENT FOREIGN KEY (BATCH_ID_) REFERENCES FLW_RU_BATCH (ID_) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Table structure for og_flow_category
-- ----------------------------
DROP TABLE og_flow_category;
CREATE TABLE og_flow_category (
  category_id NUMBER(19) NOT NULL,
  name VARCHAR2(64) NOT NULL,
  code VARCHAR2(64) NOT NULL,
  show_order NUMBER(10) NOT NULL,
  update_time TIMESTAMP NOT NULL,
  update_user_id NUMBER(19) NOT NULL,
  create_time TIMESTAMP NOT NULL,
  create_user_id NUMBER(19) NOT NULL,
  CONSTRAINT PK_FLOW_CATEGORY_ID PRIMARY KEY (category_id)
);

COMMENT ON COLUMN og_flow_category.category_id IS '主键Id';
COMMENT ON COLUMN og_flow_category.name IS '显示名称';
COMMENT ON COLUMN og_flow_category.code IS '分类编码';
COMMENT ON COLUMN og_flow_category.show_order IS '实现顺序';
COMMENT ON COLUMN og_flow_category.update_time IS '更新时间';
COMMENT ON COLUMN og_flow_category.update_user_id IS '更新者Id';
COMMENT ON COLUMN og_flow_category.create_time IS '创建时间';
COMMENT ON COLUMN og_flow_category.create_user_id IS '创建者Id';

CREATE UNIQUE INDEX idx_flow_category_code
  ON og_flow_category (code);

-- ----------------------------
-- Table structure for og_flow_entry
-- ----------------------------
DROP TABLE og_flow_entry;
CREATE TABLE og_flow_entry (
  entry_id NUMBER(19) NOT NULL,
  process_definition_name VARCHAR2(200) NOT NULL,
  process_definition_key VARCHAR2(150) NOT NULL,
  category_id NUMBER(19) NOT NULL,
  main_entry_publish_id NUMBER(19),
  latest_publish_time TIMESTAMP,
  status NUMBER(10) NOT NULL,
  bpmn_xml CLOB,
  bind_form_type NUMBER(10) NOT NULL,
  page_id NUMBER(19),
  default_form_id NUMBER(19),
  default_router_name VARCHAR2(255),
  encoded_rule VARCHAR2(2000),
  update_time TIMESTAMP NOT NULL,
  update_user_id NUMBER(19) NOT NULL,
  create_time TIMESTAMP NOT NULL,
  create_user_id NUMBER(19) NOT NULL,
  CONSTRAINT PK_FLOW_ENTRY_ID PRIMARY KEY (entry_id)
);

COMMENT ON COLUMN og_flow_entry.entry_id IS '主键';
COMMENT ON COLUMN og_flow_entry.process_definition_name IS '流程名称';
COMMENT ON COLUMN og_flow_entry.process_definition_key IS '流程标识Key';
COMMENT ON COLUMN og_flow_entry.category_id IS '流程分类';
COMMENT ON COLUMN og_flow_entry.main_entry_publish_id IS '工作流部署的发布主版本Id';
COMMENT ON COLUMN og_flow_entry.latest_publish_time IS '最新发布时间';
COMMENT ON COLUMN og_flow_entry.status IS '流程状态';
COMMENT ON COLUMN og_flow_entry.bpmn_xml IS '流程定义的xml';
COMMENT ON COLUMN og_flow_entry.bind_form_type IS '绑定表单类型';
COMMENT ON COLUMN og_flow_entry.page_id IS '在线表单的页面Id';
COMMENT ON COLUMN og_flow_entry.default_form_id IS '在线表单Id';
COMMENT ON COLUMN og_flow_entry.default_router_name IS '静态表单的缺省路由名称';
COMMENT ON COLUMN og_flow_entry.encoded_rule IS '工单表编码字段的编码规则';
COMMENT ON COLUMN og_flow_entry.update_time IS '更新时间';
COMMENT ON COLUMN og_flow_entry.update_user_id IS '更新者Id';
COMMENT ON COLUMN og_flow_entry.create_time IS '创建时间';
COMMENT ON COLUMN og_flow_entry.create_user_id IS '创建者Id';

CREATE INDEX idx_flow_entry_category_id
  ON og_flow_entry (category_id);

CREATE INDEX idx_flow_entry_proc_def_name
  ON og_flow_entry (process_definition_name);

CREATE INDEX idx_flow_entry_status
  ON og_flow_entry (status);

CREATE UNIQUE INDEX uk_flow_entry_proc_def_key
  ON og_flow_entry (process_definition_key);

-- ----------------------------
-- Table structure for og_flow_entry_publish
-- ----------------------------
DROP TABLE og_flow_entry_publish;
CREATE TABLE og_flow_entry_publish (
  entry_publish_id NUMBER(19) NOT NULL,
  entry_id NUMBER(19) NOT NULL,
  process_definition_id VARCHAR2(64) NOT NULL,
  deploy_id VARCHAR2(64) NOT NULL,
  publish_version NUMBER(10) NOT NULL,
  active_status NUMBER(10) NOT NULL,
  main_version NUMBER(10) NOT NULL,
  create_user_id NUMBER(19) NOT NULL,
  publish_time TIMESTAMP NOT NULL,
  init_task_info CLOB,
  CONSTRAINT PK_FLOW_ENTRY_PUBLISH_ID PRIMARY KEY (entry_publish_id)
);

COMMENT ON COLUMN og_flow_entry_publish.entry_publish_id IS '主键Id';
COMMENT ON COLUMN og_flow_entry_publish.entry_id IS '流程Id';
COMMENT ON COLUMN og_flow_entry_publish.process_definition_id IS '流程引擎的定义Id';
COMMENT ON COLUMN og_flow_entry_publish.deploy_id IS '流程引擎的部署Id';
COMMENT ON COLUMN og_flow_entry_publish.publish_version IS '发布版本';
COMMENT ON COLUMN og_flow_entry_publish.active_status IS '激活状态';
COMMENT ON COLUMN og_flow_entry_publish.main_version IS '是否为主版本';
COMMENT ON COLUMN og_flow_entry_publish.create_user_id IS '创建者Id';
COMMENT ON COLUMN og_flow_entry_publish.publish_time IS '发布时间';
COMMENT ON COLUMN og_flow_entry_publish.init_task_info IS '第一个非开始节点任务的附加信息';

CREATE INDEX idx_flow_entry_pub_entry_id
  ON og_flow_entry_publish (entry_id);

CREATE UNIQUE INDEX idx_flow_entry_pub_proc_def_id
  ON og_flow_entry_publish (process_definition_id);

-- ----------------------------
-- Table structure for og_flow_entry_publish_variable
-- ----------------------------
DROP TABLE og_flow_entry_publish_variable;
CREATE TABLE og_flow_entry_publish_variable (
  variable_id NUMBER(19) NOT NULL,
  entry_publish_id NUMBER(19) NOT NULL,
  variable_name VARCHAR2(255) NOT NULL,
  show_name VARCHAR2(255) NOT NULL,
  variable_type NUMBER(10) NOT NULL,
  bind_datasource_id NUMBER(19),
  bind_relation_id NUMBER(19),
  bind_column_id NUMBER(19),
  builtin NUMBER(10) NOT NULL,
  CONSTRAINT PK_FLOW_ENTRY_PUBLISH_VAR_ID PRIMARY KEY (variable_id)
);

COMMENT ON COLUMN og_flow_entry_publish_variable.variable_id IS '主键Id';
COMMENT ON COLUMN og_flow_entry_publish_variable.entry_publish_id IS '流程Id';
COMMENT ON COLUMN og_flow_entry_publish_variable.variable_name IS '变量名';
COMMENT ON COLUMN og_flow_entry_publish_variable.show_name IS '显示名';
COMMENT ON COLUMN og_flow_entry_publish_variable.variable_type IS '变量类型';
COMMENT ON COLUMN og_flow_entry_publish_variable.bind_datasource_id IS '绑定数据源Id';
COMMENT ON COLUMN og_flow_entry_publish_variable.bind_relation_id IS '绑定数据源关联Id';
COMMENT ON COLUMN og_flow_entry_publish_variable.bind_column_id IS '绑定字段Id';
COMMENT ON COLUMN og_flow_entry_publish_variable.builtin IS '是否内置';

CREATE INDEX idx_flow_entry_pub_var_pub_id
  ON og_flow_entry_publish_variable (entry_publish_id);

-- ----------------------------
-- Table structure for og_flow_entry_variable
-- ----------------------------
DROP TABLE og_flow_entry_variable;
CREATE TABLE og_flow_entry_variable (
  variable_id NUMBER(19) NOT NULL,
  entry_id NUMBER(19) NOT NULL,
  variable_name VARCHAR2(255) NOT NULL,
  show_name VARCHAR2(255) NOT NULL,
  variable_type NUMBER(10) NOT NULL,
  bind_datasource_id NUMBER(19),
  bind_relation_id NUMBER(19),
  bind_column_id NUMBER(19),
  builtin NUMBER(10) NOT NULL,
  create_time TIMESTAMP NOT NULL,
  CONSTRAINT PK_FLOW_ENTRY_VARIABLE_ID PRIMARY KEY (variable_id)
);

COMMENT ON COLUMN og_flow_entry_variable.variable_id IS '主键Id';
COMMENT ON COLUMN og_flow_entry_variable.entry_id IS '流程Id';
COMMENT ON COLUMN og_flow_entry_variable.variable_name IS '变量名';
COMMENT ON COLUMN og_flow_entry_variable.show_name IS '显示名';
COMMENT ON COLUMN og_flow_entry_variable.variable_type IS '变量类型';
COMMENT ON COLUMN og_flow_entry_variable.bind_datasource_id IS '绑定数据源Id';
COMMENT ON COLUMN og_flow_entry_variable.bind_relation_id IS '绑定数据源关联Id';
COMMENT ON COLUMN og_flow_entry_variable.bind_column_id IS '绑定字段Id';
COMMENT ON COLUMN og_flow_entry_variable.builtin IS '是否内置';
COMMENT ON COLUMN og_flow_entry_variable.create_time IS '创建时间';

CREATE UNIQUE INDEX uk_flow_entry_var_entry_id_var
  ON og_flow_entry_variable (variable_name, entry_id);

-- ----------------------------
-- Table structure for og_flow_message
-- ----------------------------
DROP TABLE og_flow_message;
CREATE TABLE og_flow_message (
  message_id NUMBER(19) NOT NULL,
  message_type NUMBER(4) NOT NULL,
  message_content CLOB,
  remind_count NUMBER(10),
  work_order_id NUMBER(19),
  process_definition_id VARCHAR2(255) NOT NULL,
  process_definition_key VARCHAR2(255) NOT NULL,
  process_definition_name VARCHAR2(255) NOT NULL,
  process_instance_id VARCHAR2(255),
  process_instance_initiator VARCHAR2(255),
  task_id VARCHAR2(255),
  task_definition_key VARCHAR2(255),
  task_name VARCHAR2(255),
  task_start_time TIMESTAMP,
  task_finished NUMBER(10) DEFAULT 0 NOT NULL,
  task_assignee VARCHAR2(64),
  business_data_shot CLOB,
  online_form_data NUMBER(10),
  update_time TIMESTAMP NOT NULL,
  update_user_id NUMBER(19) NOT NULL,
  create_time TIMESTAMP NOT NULL,
  create_user_id NUMBER(19) NOT NULL,
  create_username VARCHAR2(255) NOT NULL,
  CONSTRAINT PK_FLOW_MESSAGE_ID PRIMARY KEY (message_id)
);

COMMENT ON COLUMN og_flow_message.message_id IS '主键Id';
COMMENT ON COLUMN og_flow_message.message_type IS '消息类型';
COMMENT ON COLUMN og_flow_message.message_content IS '消息内容';
COMMENT ON COLUMN og_flow_message.remind_count IS '催办次数';
COMMENT ON COLUMN og_flow_message.work_order_id IS '工单Id';
COMMENT ON COLUMN og_flow_message.process_definition_id IS '流程定义Id';
COMMENT ON COLUMN og_flow_message.process_definition_key IS '流程定义标识';
COMMENT ON COLUMN og_flow_message.process_definition_name IS '流程定义名称';
COMMENT ON COLUMN og_flow_message.process_instance_id IS '流程实例Id';
COMMENT ON COLUMN og_flow_message.process_instance_initiator IS '流程实例发起者';
COMMENT ON COLUMN og_flow_message.task_id IS '流程任务Id';
COMMENT ON COLUMN og_flow_message.task_definition_key IS '流程任务定义标识';
COMMENT ON COLUMN og_flow_message.task_name IS '流程任务名称';
COMMENT ON COLUMN og_flow_message.task_start_time IS '任务开始时间';
COMMENT ON COLUMN og_flow_message.task_finished IS '任务是否已完成';
COMMENT ON COLUMN og_flow_message.task_assignee IS '任务指派人登录名';
COMMENT ON COLUMN og_flow_message.business_data_shot IS '业务数据快照';
COMMENT ON COLUMN og_flow_message.online_form_data IS '是否为在线表单消息数据';
COMMENT ON COLUMN og_flow_message.update_time IS '更新时间';
COMMENT ON COLUMN og_flow_message.update_user_id IS '更新者Id';
COMMENT ON COLUMN og_flow_message.create_time IS '创建时间';
COMMENT ON COLUMN og_flow_message.create_user_id IS '创建者Id';
COMMENT ON COLUMN og_flow_message.create_username IS '创建者显示名';

CREATE INDEX idx_flow_msg_message_type
  ON og_flow_message (message_type);

CREATE INDEX idx_flow_msg_notified_username
  ON og_flow_message (task_assignee);

CREATE INDEX idx_flow_msg_task_finished
  ON og_flow_message (task_finished);

CREATE INDEX idx_flow_msg_task_id
  ON og_flow_message (task_id);

CREATE INDEX idx_flow_msg_update_time
  ON og_flow_message (update_time);

-- ----------------------------
-- Table structure for og_flow_msg_candidate_identity
-- ----------------------------
DROP TABLE og_flow_msg_candicate_identity;
CREATE TABLE og_flow_msg_candidate_identity (
  id NUMBER(19) NOT NULL,
  message_id NUMBER(19) NOT NULL,
  candidate_type VARCHAR2(32) NOT NULL,
  candidate_id VARCHAR2(32) NOT NULL,
  CONSTRAINT PK_FLOW_MSG_CANDIDATE_ID PRIMARY KEY (id)
);

COMMENT ON COLUMN og_flow_msg_candidate_identity.id IS '主键Id';
COMMENT ON COLUMN og_flow_msg_candidate_identity.message_id IS '流程任务Id';
COMMENT ON COLUMN og_flow_msg_candidate_identity.candidate_type IS '候选身份类型';
COMMENT ON COLUMN og_flow_msg_candidate_identity.candidate_id IS '候选身份Id';

CREATE INDEX idx_flow_msg_ci_candidate_id
  ON og_flow_msg_candidate_identity (candidate_id);

CREATE INDEX idx_flow_msg_ci_msg_id
  ON og_flow_msg_candidate_identity (message_id);

-- ----------------------------
-- Table structure for og_flow_msg_identity_operation
-- ----------------------------
DROP TABLE og_flow_msg_identity_operation;
CREATE TABLE og_flow_msg_identity_operation (
  id NUMBER(19) NOT NULL,
  message_id NUMBER(19) NOT NULL,
  login_name VARCHAR2(64) NOT NULL,
  operation_type NUMBER(10) NOT NULL,
  operation_time TIMESTAMP NOT NULL,
  CONSTRAINT PK_FLOW_MSG_IDENTITY_OP_ID PRIMARY KEY (id)
);

COMMENT ON COLUMN og_flow_msg_identity_operation.id IS '主键Id';
COMMENT ON COLUMN og_flow_msg_identity_operation.message_id IS '流程任务Id';
COMMENT ON COLUMN og_flow_msg_identity_operation.login_name IS '用户登录名';
COMMENT ON COLUMN og_flow_msg_identity_operation.operation_type IS '操作类型';
COMMENT ON COLUMN og_flow_msg_identity_operation.operation_time IS '操作时间';

CREATE INDEX idx_flow_msg_io_login_name
  ON og_flow_msg_identity_operation (login_name);

CREATE INDEX idx_flow_msg_io_message_id
  ON og_flow_msg_identity_operation (message_id);

-- ----------------------------
-- Table structure for og_flow_multi_instance_trans
-- ----------------------------
DROP TABLE og_flow_multi_instance_trans;
CREATE TABLE og_flow_multi_instance_trans (
  id NUMBER(19) NOT NULL,
  process_instance_id VARCHAR2(64) NOT NULL,
  task_id VARCHAR2(64) NOT NULL,
  task_key VARCHAR2(255) NOT NULL,
  multi_instance_exec_id VARCHAR2(64) NOT NULL,
  execution_id VARCHAR2(64) NOT NULL,
  assignee_list CLOB,
  create_user_id NUMBER(19) NOT NULL,
  create_login_name VARCHAR2(255) NOT NULL,
  create_username VARCHAR2(255) NOT NULL,
  create_time TIMESTAMP NOT NULL,
  CONSTRAINT PK_FLOW_MULTI_INST_TRANS_ID PRIMARY KEY (id)
);

COMMENT ON COLUMN og_flow_multi_instance_trans.id IS '主键Id';
COMMENT ON COLUMN og_flow_multi_instance_trans.process_instance_id IS '流程实例Id';
COMMENT ON COLUMN og_flow_multi_instance_trans.task_id IS '任务Id';
COMMENT ON COLUMN og_flow_multi_instance_trans.task_key IS '任务标识';
COMMENT ON COLUMN og_flow_multi_instance_trans.multi_instance_exec_id IS '会签任务的执行Id';
COMMENT ON COLUMN og_flow_multi_instance_trans.execution_id IS '任务的执行Id';
COMMENT ON COLUMN og_flow_multi_instance_trans.assignee_list IS '会签指派人列表';
COMMENT ON COLUMN og_flow_multi_instance_trans.create_user_id IS '创建者Id';
COMMENT ON COLUMN og_flow_multi_instance_trans.create_login_name IS '创建者登录名';
COMMENT ON COLUMN og_flow_multi_instance_trans.create_username IS '创建者用户名';
COMMENT ON COLUMN og_flow_multi_instance_trans.create_time IS '创建时间';

CREATE UNIQUE INDEX idx_flow_mit_execution_id
  ON og_flow_multi_instance_trans (execution_id);

CREATE INDEX idx_flow_mit_mie_id
  ON og_flow_multi_instance_trans (multi_instance_exec_id);

-- ----------------------------
-- Table structure for og_flow_task_comment
-- ----------------------------
DROP TABLE og_flow_task_comment;
CREATE TABLE og_flow_task_comment (
  id NUMBER(19) NOT NULL,
  process_instance_id VARCHAR2(64) NOT NULL,
  task_id VARCHAR2(64) NOT NULL,
  task_key VARCHAR2(255) NOT NULL,
  task_name VARCHAR2(512),
  execution_id VARCHAR2(64),
  multi_instance_exec_id VARCHAR2(64),
  approval_type VARCHAR2(32) NOT NULL,
  task_comment CLOB,
  delegate_assignee VARCHAR2(512),
  custom_business_data CLOB,
  create_user_id NUMBER(19) NOT NULL,
  create_login_name VARCHAR2(255) NOT NULL,
  create_username VARCHAR2(255) NOT NULL,
  create_time TIMESTAMP NOT NULL,
  CONSTRAINT PK_FLOW_TASK_COMMENT_ID PRIMARY KEY (id)
);

COMMENT ON COLUMN og_flow_task_comment.id IS '主键Id';
COMMENT ON COLUMN og_flow_task_comment.process_instance_id IS '流程实例Id';
COMMENT ON COLUMN og_flow_task_comment.task_id IS '任务Id';
COMMENT ON COLUMN og_flow_task_comment.task_key IS '任务标识';
COMMENT ON COLUMN og_flow_task_comment.task_name IS '任务名称';
COMMENT ON COLUMN og_flow_task_comment.approval_type IS '审批类型';
COMMENT ON COLUMN og_flow_task_comment.task_comment IS '批注内容';
COMMENT ON COLUMN og_flow_task_comment.delegate_assignee IS '委托指定人，比如加签、转办等';
COMMENT ON COLUMN og_flow_task_comment.custom_business_data IS '自定义数据。开发者可自行扩展，推荐使用JSON格式数据';
COMMENT ON COLUMN og_flow_task_comment.create_user_id IS '创建者Id';
COMMENT ON COLUMN og_flow_task_comment.create_login_name IS '创建者登录名';
COMMENT ON COLUMN og_flow_task_comment.create_username IS '创建者用户名';
COMMENT ON COLUMN og_flow_task_comment.create_time IS '创建时间';

CREATE INDEX idx_flow_tc_proc_instance_id
  ON og_flow_task_comment (process_instance_id);

-- ----------------------------
-- Table structure for og_flow_task_ext
-- ----------------------------
DROP TABLE og_flow_task_ext;
CREATE TABLE og_flow_task_ext (
  process_definition_id VARCHAR2(64) NOT NULL,
  task_id VARCHAR2(64) NOT NULL,
  operation_list_json CLOB,
  variable_list_json CLOB,
  assignee_list_json CLOB,
  group_type VARCHAR2(255) NOT NULL,
  dept_post_list_json CLOB,
  role_ids CLOB,
  dept_ids CLOB,
  candidate_usernames CLOB,
  copy_list_json CLOB,
  CONSTRAINT PK_FLOW_TASK_EXT_DEFID_TASK_ID PRIMARY KEY (process_definition_id, task_id)
);

COMMENT ON COLUMN og_flow_task_ext.process_definition_id IS '流程引擎的定义Id';
COMMENT ON COLUMN og_flow_task_ext.task_id IS '流程引擎任务Id';
COMMENT ON COLUMN og_flow_task_ext.operation_list_json IS '操作列表JSON';
COMMENT ON COLUMN og_flow_task_ext.variable_list_json IS '变量列表JSON';
COMMENT ON COLUMN og_flow_task_ext.assignee_list_json IS '存储多实例的assigneeList的JSON';
COMMENT ON COLUMN og_flow_task_ext.group_type IS '分组类型';
COMMENT ON COLUMN og_flow_task_ext.dept_post_list_json IS '保存岗位相关的数据';
COMMENT ON COLUMN og_flow_task_ext.role_ids IS '保存角色Id数据';
COMMENT ON COLUMN og_flow_task_ext.dept_ids IS '保存部门Id数据';
COMMENT ON COLUMN og_flow_task_ext.candidate_usernames IS '保存候选组用户名数据';
COMMENT ON COLUMN og_flow_task_ext.copy_list_json IS '抄送相关的数据';

-- ----------------------------
-- Table structure for og_flow_work_order
-- ----------------------------
DROP TABLE og_flow_work_order;
CREATE TABLE og_flow_work_order (
  work_order_id NUMBER(19) NOT NULL,
  work_order_code VARCHAR2(255),
  process_definition_key VARCHAR2(128) NOT NULL,
  process_definition_name VARCHAR2(200) NOT NULL,
  process_definition_id VARCHAR2(64) NOT NULL,
  process_instance_id VARCHAR2(64) NOT NULL,
  online_table_id NUMBER(19),
  table_name VARCHAR2(128),
  business_key VARCHAR2(128),
  task_id VARCHAR2(64),
  task_name VARCHAR2(255),
  task_definition_key VARCHAR2(255),
  latest_operation_type NUMBER(10),
  flow_status NUMBER(10) NOT NULL,
  submit_username VARCHAR2(64) NOT NULL,
  dept_id NUMBER(19) NOT NULL,
  update_time TIMESTAMP NOT NULL,
  update_user_id NUMBER(19) NOT NULL,
  create_time TIMESTAMP NOT NULL,
  create_user_id NUMBER(19) NOT NULL,
  deleted_flag NUMBER(10) NOT NULL,
  CONSTRAINT PK_FLOW_WORK_ORDER_ID PRIMARY KEY (work_order_id)
);

COMMENT ON COLUMN og_flow_work_order.work_order_id IS '主键Id';
COMMENT ON COLUMN og_flow_work_order.work_order_code IS '工单编码字段';
COMMENT ON COLUMN og_flow_work_order.process_definition_key IS '流程定义标识';
COMMENT ON COLUMN og_flow_work_order.process_definition_name IS '流程名称';
COMMENT ON COLUMN og_flow_work_order.process_definition_id IS '流程引擎的定义Id';
COMMENT ON COLUMN og_flow_work_order.process_instance_id IS '流程实例Id';
COMMENT ON COLUMN og_flow_work_order.online_table_id IS '在线表单的主表Id';
COMMENT ON COLUMN og_flow_work_order.table_name IS '静态表单表名';
COMMENT ON COLUMN og_flow_work_order.business_key IS '业务主键值';
COMMENT ON COLUMN og_flow_work_order.task_id IS '未完成的任务Id';
COMMENT ON COLUMN og_flow_work_order.task_name IS '未完成的任务名称';
COMMENT ON COLUMN og_flow_work_order.task_definition_key IS '未完成的任务标识';
COMMENT ON COLUMN og_flow_work_order.latest_operation_type IS '最近的审批操作类型';
COMMENT ON COLUMN og_flow_work_order.flow_status IS '流程状态';
COMMENT ON COLUMN og_flow_work_order.submit_username IS '提交用户登录名称';
COMMENT ON COLUMN og_flow_work_order.dept_id IS '提交用户所在部门Id';
COMMENT ON COLUMN og_flow_work_order.update_time IS '更新时间';
COMMENT ON COLUMN og_flow_work_order.update_user_id IS '更新者Id';
COMMENT ON COLUMN og_flow_work_order.create_time IS '创建时间';
COMMENT ON COLUMN og_flow_work_order.create_user_id IS '创建者Id';
COMMENT ON COLUMN og_flow_work_order.deleted_flag IS '逻辑删除标记(0: 正常 1: 已删除)';

CREATE INDEX idx_flow_wo_business_key
  ON og_flow_work_order (business_key);

CREATE INDEX idx_flow_wo_create_time
  ON og_flow_work_order (create_time);

CREATE INDEX idx_flow_wo_create_user_id
  ON og_flow_work_order (create_user_id);

CREATE INDEX idx_flow_wo_dept_id
  ON og_flow_work_order (dept_id);

CREATE INDEX idx_flow_wo_proc_def_key
  ON og_flow_work_order (process_definition_key);

CREATE UNIQUE INDEX uk_flow_wo_process_instance_id
  ON og_flow_work_order (process_instance_id);

-- ----------------------------
-- Table structure for og_flow_work_order_ext
-- ----------------------------
DROP TABLE og_flow_work_order_ext;
CREATE TABLE og_flow_work_order_ext (
  id NUMBER(19) NOT NULL,
  work_order_id NUMBER(19) NOT NULL,
  draft_data CLOB,
  business_data CLOB,
  update_time TIMESTAMP NOT NULL,
  update_user_id NUMBER(19) NOT NULL,
  create_time TIMESTAMP NOT NULL,
  create_user_id NUMBER(19) NOT NULL,
  deleted_flag NUMBER(10) NOT NULL,
  CONSTRAINT PK_FLOW_WORK_ORDER_EXT_ID PRIMARY KEY (id)
);

COMMENT ON COLUMN og_flow_work_order_ext.id IS '主键Id';
COMMENT ON COLUMN og_flow_work_order_ext.work_order_id IS '工单Id';
COMMENT ON COLUMN og_flow_work_order_ext.draft_data IS '草稿数据';
COMMENT ON COLUMN og_flow_work_order_ext.business_data IS '业务数据';
COMMENT ON COLUMN og_flow_work_order_ext.update_time IS '更新时间';
COMMENT ON COLUMN og_flow_work_order_ext.update_user_id IS '更新者Id';
COMMENT ON COLUMN og_flow_work_order_ext.create_time IS '创建时间';
COMMENT ON COLUMN og_flow_work_order_ext.create_user_id IS '创建者Id';
COMMENT ON COLUMN og_flow_work_order_ext.deleted_flag IS '逻辑删除标记(0: 正常 1: 已删除)';

CREATE INDEX idx_flow_wo_ext_work_order_id
  ON og_flow_work_order_ext (work_order_id);

